35	Malimau Yakigongwa, Part 1	32	### IMPORTANT: Preamble required on server; omitted here. ####\r\n\r\nimport pyxel\r\nfrom random import randint\r\n\r\nclass App:\r\n    def __init__(self):\r\n        pyxel.init(160, 120, caption='Mchezo')\r\n\r\n        pyxel.image(0).load(0, 0, 'sprites2.png')\r\n\r\n        self.clouds = [(10, 10), (60, 20), (120, 5)]\r\n        self.player_x = 70\r\n        self.player_y = 50\r\n        self.score = 0\r\n        self.makombora = []\r\n        self.player_xdir = 1\r\n        # SOLN: Added third part\r\n        self.malimau = [(150, randint(0, 120), False)]\r\n\r\n        pyxel.run(self.update, self.draw)\r\n\r\n    def update(self):\r\n        if pyxel.btnp(pyxel.KEY_ESCAPE):\r\n            pyxel.quit()\r\n\r\n        self.update_player()\r\n\r\n        self.update_score()\r\n\r\n    def update_score(self):\r\n        self.score = len(self.makombora)\r\n\r\n    def update_player(self):\r\n        if pyxel.btn(pyxel.KEY_W) or pyxel.btn(pyxel.KEY_UP):\r\n            self.player_y -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_A) or pyxel.btn(pyxel.KEY_LEFT):\r\n            self.player_x -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_S) or pyxel.btn(pyxel.KEY_DOWN):\r\n            self.player_y += 2\r\n\r\n        if pyxel.btn(pyxel.KEY_D) or pyxel.btn(pyxel.KEY_RIGHT):\r\n            self.player_x += 2\r\n\r\n        if pyxel.btnp(pyxel.KEY_SPACE):\r\n            self.makombora.append((self.player_x+8, \\\r\n                    self.player_y+8, self.player_xdir))\r\n\r\n        if pyxel.btnp(pyxel.KEY_F):\r\n            self.player_xdir *= -1\r\n\r\n    def draw(self):\r\n    \t# clear screen, paint sky blue\r\n        pyxel.cls(12)\r\n\r\n        # draw horizon + mountain + forest\r\n        pyxel.blt(0, 0, 0, 0, 120, 160, 120)\r\n\r\n        # draw clouds\r\n        offset = (pyxel.frame_count / 4) % 160\r\n        for i in range(2):\r\n          for x, y in self.clouds:\r\n            pyxel.blt(x + (i * 160) - offset, y, 0, 0, 32, 56, 8)\r\n\r\n        # draw malimau\r\n        # SOLN: Added third tuple part\r\n        for x, y, hit in self.malimau:\r\n            pyxel.blt(x, y, 0, 48, 0, 16, 16, 12)\r\n        # SOLN: Added to else clause\r\n        self.malimau = [(x - 1, y, hit) if x > -16 and not hit \\\r\n                else (150, randint(0, 120), False) for x, y, hit in self.malimau]\r\n\r\n        # draw girl\r\n        pyxel.blt(self.player_x, self.player_y, 0, 0, 0,\r\n                16*self.player_xdir, 16, 12)\r\n\r\n        # draw makombora\r\n        for x, y, _ in self.makombora:\r\n            pyxel.pix(x, y, 8)\r\n        self.makombora = [(x+1*direction, y, direction) \\\r\n                for x, y, direction in self.makombora if x < 160 and x > 0]\r\n\r\n        # draw score\r\n        pyxel.text(5, 4, f"SCORE: {self.score}", 1)\r\n        pyxel.text(4, 4, f"SCORE: {self.score}", 7)\r\nApp()	<p>\r\nSasa tunayo kazi kubwa: we need to know when a limau is hit.\r\n</p>\r\n<p>\r\nFirst, change the lemon in <code>self.malimau</code>: after its X and Y values, add <code>False</code>. This means the lemon has not been <code>hit</code>: when the game starts, the lemon halijagongwa, kwa hiyo tunatumia False hapa.\r\n</p>\r\n<p>\r\nNext, you need to modify the two for loops that are used to draw the malimau, similar to how you did for makombora. Use the variable name <code>hit</code>. Then, change the line that moves the malimau: if a limau's X is greater than -16 <b>and the limau has not yet been hit</b>, move it to the left kama kawaida. <b>Else</b>, it should be moved to the right side of the screen kama kawaida <b>with its <code>hit</code> value reset to False</b>.	# Note: PD_STATIC_IMAGES_PATH varies based on address\r\n# of server and thus is prepended to this value in views.py\r\nimport os, requests\r\nBASE_DIR = os.path.dirname(os.path.abspath(__file__))\r\nfiles_to_load = ['sprites2.png']\r\nfor fname in files_to_load:\r\n  fpath = os.path.join(BASE_DIR, fname)\r\n  if not os.path.exists(fpath):\r\n    with open(fpath, 'wb') as f:\r\n      f.write(requests.get(PD_STATIC_IMAGES_PATH+fname).content)
34	Move Malimau	31	### IMPORTANT: Preamble required on server; omitted here. ####\r\n\r\nimport pyxel\r\nfrom random import randint\r\n\r\nclass App:\r\n    def __init__(self):\r\n        pyxel.init(160, 120, caption='Mchezo')\r\n\r\n        pyxel.image(0).load(0, 0, 'sprites2.png')\r\n\r\n        self.clouds = [(10, 10), (60, 20), (120, 5)]\r\n        self.player_x = 70\r\n        self.player_y = 50\r\n        self.score = 0\r\n        self.makombora = []\r\n        self.player_xdir = 1\r\n        self.malimau = [(150, randint(0, 120))]\r\n\r\n        pyxel.run(self.update, self.draw)\r\n\r\n    def update(self):\r\n        if pyxel.btnp(pyxel.KEY_ESCAPE):\r\n            pyxel.quit()\r\n\r\n        self.update_player()\r\n\r\n        self.update_score()\r\n\r\n    def update_score(self):\r\n        self.score = len(self.makombora)\r\n\r\n    def update_player(self):\r\n        if pyxel.btn(pyxel.KEY_W) or pyxel.btn(pyxel.KEY_UP):\r\n            self.player_y -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_A) or pyxel.btn(pyxel.KEY_LEFT):\r\n            self.player_x -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_S) or pyxel.btn(pyxel.KEY_DOWN):\r\n            self.player_y += 2\r\n\r\n        if pyxel.btn(pyxel.KEY_D) or pyxel.btn(pyxel.KEY_RIGHT):\r\n            self.player_x += 2\r\n\r\n        if pyxel.btnp(pyxel.KEY_SPACE):\r\n            self.makombora.append((self.player_x+8, \\\r\n                    self.player_y+8, self.player_xdir))\r\n\r\n        if pyxel.btnp(pyxel.KEY_F):\r\n            self.player_xdir *= -1\r\n\r\n    def draw(self):\r\n    \t# clear screen, paint sky blue\r\n        pyxel.cls(12)\r\n\r\n        # draw horizon + mountain + forest\r\n        pyxel.blt(0, 0, 0, 0, 120, 160, 120)\r\n\r\n        # draw clouds\r\n        offset = (pyxel.frame_count / 4) % 160\r\n        for i in range(2):\r\n          for x, y in self.clouds:\r\n            pyxel.blt(x + (i * 160) - offset, y, 0, 0, 32, 56, 8)\r\n\r\n        # draw malimau\r\n        for x, y, in self.malimau:\r\n            pyxel.blt(x, y, 0, 48, 0, 16, 16, 12)\r\n        # SOLN: Added this line\r\n        self.malimau = [(x - 1, y) if x > -16 else (150, randint(0, 120)) \\\r\n                for x, y in self.malimau]\r\n\r\n        # draw girl\r\n        pyxel.blt(self.player_x, self.player_y, 0, 0, 0,\r\n                16*self.player_xdir, 16, 12)\r\n\r\n        # draw makombora\r\n        for x, y, _ in self.makombora:\r\n            pyxel.pix(x, y, 8)\r\n        self.makombora = [(x+1*direction, y, direction) \\\r\n                for x, y, direction in self.makombora if x < 160 and x > 0]\r\n\r\n        # draw score\r\n        pyxel.text(5, 4, f"SCORE: {self.score}", 1)\r\n        pyxel.text(4, 4, f"SCORE: {self.score}", 7)\r\nApp()	Now let's move the malimau from right to left across the screen, similar to how we did with the makombora. The only difference here is that when a limau reaches the left side of the screen, we want to move it back to the right <b>at a random Y position on the screen</b>. Immediately after you draw the malimau, add this line:\r\n<br/><br/>\r\n<center><code>self.malimau = [______________________ for x, y in self.malimau]</code></center>\r\n<br/>\r\nFill in the blank so that we move each limau 1 pixel to the left <b>if it's X coordinate is greater than -16</b> (we use -16 because each limau is 16 pixels wide). <b>Else</b>, move the limau back to 150 on the X axis and to a random place on the Y axis between 0 and the height of the screen.	# Note: PD_STATIC_IMAGES_PATH varies based on address\r\n# of server and thus is prepended to this value in views.py\r\nimport os, requests\r\nBASE_DIR = os.path.dirname(os.path.abspath(__file__))\r\nfiles_to_load = ['sprites2.png']\r\nfor fname in files_to_load:\r\n  fpath = os.path.join(BASE_DIR, fname)\r\n  if not os.path.exists(fpath):\r\n    with open(fpath, 'wb') as f:\r\n      f.write(requests.get(PD_STATIC_IMAGES_PATH+fname).content)
33	Malimau	30	### IMPORTANT: Preamble required on server; omitted here. ####\r\n\r\nimport pyxel\r\n# SOLN: Added this import\r\nfrom random import randint\r\n\r\nclass App:\r\n    def __init__(self):\r\n        pyxel.init(160, 120, caption='Mchezo')\r\n\r\n        pyxel.image(0).load(0, 0, 'sprites2.png')\r\n\r\n        self.clouds = [(10, 10), (60, 20), (120, 5)]\r\n        self.player_x = 70\r\n        self.player_y = 50\r\n        self.score = 0\r\n        self.makombora = []\r\n        self.player_xdir = 1\r\n        # SOLN: Added this line\r\n        self.malimau = [(150, randint(0, 120))]\r\n\r\n        pyxel.run(self.update, self.draw)\r\n\r\n    def update(self):\r\n        if pyxel.btnp(pyxel.KEY_ESCAPE):\r\n            pyxel.quit()\r\n\r\n        self.update_player()\r\n\r\n        self.update_score()\r\n\r\n    def update_score(self):\r\n        self.score = len(self.makombora)\r\n\r\n    def update_player(self):\r\n        if pyxel.btn(pyxel.KEY_W) or pyxel.btn(pyxel.KEY_UP):\r\n            self.player_y -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_A) or pyxel.btn(pyxel.KEY_LEFT):\r\n            self.player_x -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_S) or pyxel.btn(pyxel.KEY_DOWN):\r\n            self.player_y += 2\r\n\r\n        if pyxel.btn(pyxel.KEY_D) or pyxel.btn(pyxel.KEY_RIGHT):\r\n            self.player_x += 2\r\n\r\n        if pyxel.btnp(pyxel.KEY_SPACE):\r\n            self.makombora.append((self.player_x+8, \\\r\n                    self.player_y+8, self.player_xdir))\r\n\r\n        if pyxel.btnp(pyxel.KEY_F):\r\n            self.player_xdir *= -1\r\n\r\n    def draw(self):\r\n    \t# clear screen, paint sky blue\r\n        pyxel.cls(12)\r\n\r\n        # draw horizon + mountain + forest\r\n        pyxel.blt(0, 0, 0, 0, 120, 160, 120)\r\n\r\n        # draw clouds\r\n        offset = (pyxel.frame_count / 4) % 160\r\n        for i in range(2):\r\n          for x, y in self.clouds:\r\n            pyxel.blt(x + (i * 160) - offset, y, 0, 0, 32, 56, 8)\r\n\r\n        # SOLN: Added this block:\r\n        # draw malimau\r\n        for x, y, in self.malimau:\r\n            pyxel.blt(x, y, 0, 48, 0, 16, 16, 12)\r\n\r\n        # draw girl\r\n        pyxel.blt(self.player_x, self.player_y, 0, 0, 0,\r\n                16*self.player_xdir, 16, 12)\r\n\r\n        # draw makombora\r\n        for x, y, _ in self.makombora:\r\n            pyxel.pix(x, y, 8)\r\n        self.makombora = [(x+1*direction, y, direction) \\\r\n                for x, y, direction in self.makombora if x < 160 and x > 0]\r\n\r\n        # draw score\r\n        pyxel.text(5, 4, f"SCORE: {self.score}", 1)\r\n        pyxel.text(4, 4, f"SCORE: {self.score}", 7)\r\nApp()	We now need something for the girl to shoot. Let's add malimau:\r\n\r\n<ul>\r\n  <li>First, we need to import the <code>randint</code> function from the <code>random</code> library. To do this, write <code>from random import randint</code> beneath the line <code>import pyxel</code>.</li>\r\n  <li>Create a new variable to hold the limau. Put a list inside this variable. The list should have only one limau: its X value should be 150, and its Y value should be a random integer between 0 and the height of the screen.</li>\r\n  <li>On top of the clouds, but underneath the girl, draw all of the malimau to the screen just like you did with the makombora. The malimau have an <code>sx</code> of 48, an <code>sy</code> of 0, a <code>width</code> of 16, a <code>height</code> of 16, and a transparent color of 12.</li>\r\n</ul>	# Note: PD_STATIC_IMAGES_PATH varies based on address\r\n# of server and thus is prepended to this value in views.py\r\nimport os, requests\r\nBASE_DIR = os.path.dirname(os.path.abspath(__file__))\r\nfiles_to_load = ['sprites2.png']\r\nfor fname in files_to_load:\r\n  fpath = os.path.join(BASE_DIR, fname)\r\n  if not os.path.exists(fpath):\r\n    with open(fpath, 'wb') as f:\r\n      f.write(requests.get(PD_STATIC_IMAGES_PATH+fname).content)
37	Touching Malimau Loses Points	34	### IMPORTANT: Preamble required on server; omitted here. ####\r\n\r\nimport pyxel\r\nfrom random import randint\r\n\r\nclass App:\r\n    def __init__(self):\r\n        pyxel.init(160, 120, caption='Mchezo')\r\n\r\n        pyxel.image(0).load(0, 0, 'sprites2.png')\r\n\r\n        self.clouds = [(10, 10), (60, 20), (120, 5)]\r\n        self.player_x = 70\r\n        self.player_y = 50\r\n        self.score = 0\r\n        self.makombora = []\r\n        self.player_xdir = 1\r\n        self.malimau = [(150, randint(0, 120), False)]\r\n\r\n        pyxel.run(self.update, self.draw)\r\n\r\n    def update(self):\r\n        if pyxel.btnp(pyxel.KEY_ESCAPE):\r\n            pyxel.quit()\r\n\r\n        self.update_player()\r\n\r\n        self.update_score()\r\n\r\n    def update_score(self):\r\n        self.malimau = [(x, y, True if abs(x - self.player_x) < 14 \\\r\n                                   and abs(y - self.player_y) < 14 else False) \\\r\n                        for x, y, hit in self.malimau]\r\n        # SOLN: Added this line\r\n        self.score -= 5 * len(list(filter(lambda limau: limau[2], self.malimau)))\r\n\r\n    def update_player(self):\r\n        if pyxel.btn(pyxel.KEY_W) or pyxel.btn(pyxel.KEY_UP):\r\n            self.player_y -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_A) or pyxel.btn(pyxel.KEY_LEFT):\r\n            self.player_x -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_S) or pyxel.btn(pyxel.KEY_DOWN):\r\n            self.player_y += 2\r\n\r\n        if pyxel.btn(pyxel.KEY_D) or pyxel.btn(pyxel.KEY_RIGHT):\r\n            self.player_x += 2\r\n\r\n        if pyxel.btnp(pyxel.KEY_SPACE):\r\n            self.makombora.append((self.player_x+8, \\\r\n                    self.player_y+8, self.player_xdir))\r\n\r\n        if pyxel.btnp(pyxel.KEY_F):\r\n            self.player_xdir *= -1\r\n\r\n    def draw(self):\r\n    \t# clear screen, paint sky blue\r\n        pyxel.cls(12)\r\n\r\n        # draw horizon + mountain + forest\r\n        pyxel.blt(0, 0, 0, 0, 120, 160, 120)\r\n\r\n        # draw clouds\r\n        offset = (pyxel.frame_count / 4) % 160\r\n        for i in range(2):\r\n          for x, y in self.clouds:\r\n            pyxel.blt(x + (i * 160) - offset, y, 0, 0, 32, 56, 8)\r\n\r\n        # draw malimau\r\n        for x, y, hit in self.malimau:\r\n            pyxel.blt(x, y, 0, 48, 0, 16, 16, 12)\r\n        self.malimau = [(x - 1, y, hit) if x > -16 and not hit \\\r\n                else (150, randint(0, 120), False) for x, y, hit in self.malimau]\r\n\r\n        # draw girl\r\n        pyxel.blt(self.player_x, self.player_y, 0, 0, 0,\r\n                16*self.player_xdir, 16, 12)\r\n\r\n        # draw makombora\r\n        for x, y, _ in self.makombora:\r\n            pyxel.pix(x, y, 8)\r\n        self.makombora = [(x+1*direction, y, direction) \\\r\n                for x, y, direction in self.makombora if x < 160 and x > 0]\r\n\r\n        # draw score\r\n        pyxel.text(5, 4, f"SCORE: {self.score}", 1)\r\n        pyxel.text(4, 4, f"SCORE: {self.score}", 7)\r\nApp()	<p>\r\nNow let's change the score: for every limau that the girl touches, you should subtract 5 points from the score. Add this line to the end of your <code>update_score(self)</code> function:\r\n</p>\r\n<center><code>self.score -= ___ * ___(list(filter(lambda limau: ____, self.malimau)))</code></center>\r\n<br/>\r\n<p>\r\nA number goes in the first blank. A function name goes in the second blank. For the third blank, keep in mind that we are <code>filter</code>ing the malimau list. <b>We only want to find a limau if it has been hit; yaani, its 3rd part is <code>True</code></b>.\r\n</p>	# Note: PD_STATIC_IMAGES_PATH varies based on address\r\n# of server and thus is prepended to this value in views.py\r\nimport os, requests\r\nBASE_DIR = os.path.dirname(os.path.abspath(__file__))\r\nfiles_to_load = ['sprites2.png']\r\nfor fname in files_to_load:\r\n  fpath = os.path.join(BASE_DIR, fname)\r\n  if not os.path.exists(fpath):\r\n    with open(fpath, 'wb') as f:\r\n      f.write(requests.get(PD_STATIC_IMAGES_PATH+fname).content)
36	Malimau Yakigongwa, Part 2	33	### IMPORTANT: Preamble required on server; omitted here. ####\r\n\r\nimport pyxel\r\nfrom random import randint\r\n\r\nclass App:\r\n    def __init__(self):\r\n        pyxel.init(160, 120, caption='Mchezo')\r\n\r\n        pyxel.image(0).load(0, 0, 'sprites2.png')\r\n\r\n        self.clouds = [(10, 10), (60, 20), (120, 5)]\r\n        self.player_x = 70\r\n        self.player_y = 50\r\n        self.score = 0\r\n        self.makombora = []\r\n        self.player_xdir = 1\r\n        self.malimau = [(150, randint(0, 120), False)]\r\n\r\n        pyxel.run(self.update, self.draw)\r\n\r\n    def update(self):\r\n        if pyxel.btnp(pyxel.KEY_ESCAPE):\r\n            pyxel.quit()\r\n\r\n        self.update_player()\r\n\r\n        self.update_score()\r\n\r\n    def update_score(self):\r\n        # SOLN: Changed function body\r\n        self.malimau = [(x, y, True if abs(x - self.player_x) < 14 \\\r\n                                   and abs(y - self.player_y) < 14 else False) \\\r\n                        for x, y, hit in self.malimau]\r\n\r\n    def update_player(self):\r\n        if pyxel.btn(pyxel.KEY_W) or pyxel.btn(pyxel.KEY_UP):\r\n            self.player_y -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_A) or pyxel.btn(pyxel.KEY_LEFT):\r\n            self.player_x -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_S) or pyxel.btn(pyxel.KEY_DOWN):\r\n            self.player_y += 2\r\n\r\n        if pyxel.btn(pyxel.KEY_D) or pyxel.btn(pyxel.KEY_RIGHT):\r\n            self.player_x += 2\r\n\r\n        if pyxel.btnp(pyxel.KEY_SPACE):\r\n            self.makombora.append((self.player_x+8, \\\r\n                    self.player_y+8, self.player_xdir))\r\n\r\n        if pyxel.btnp(pyxel.KEY_F):\r\n            self.player_xdir *= -1\r\n\r\n    def draw(self):\r\n    \t# clear screen, paint sky blue\r\n        pyxel.cls(12)\r\n\r\n        # draw horizon + mountain + forest\r\n        pyxel.blt(0, 0, 0, 0, 120, 160, 120)\r\n\r\n        # draw clouds\r\n        offset = (pyxel.frame_count / 4) % 160\r\n        for i in range(2):\r\n          for x, y in self.clouds:\r\n            pyxel.blt(x + (i * 160) - offset, y, 0, 0, 32, 56, 8)\r\n\r\n        # draw malimau\r\n        for x, y, hit in self.malimau:\r\n            pyxel.blt(x, y, 0, 48, 0, 16, 16, 12)\r\n        self.malimau = [(x - 1, y, hit) if x > -16 and not hit \\\r\n                else (150, randint(0, 120), False) for x, y, hit in self.malimau]\r\n\r\n        # draw girl\r\n        pyxel.blt(self.player_x, self.player_y, 0, 0, 0,\r\n                16*self.player_xdir, 16, 12)\r\n\r\n        # draw makombora\r\n        for x, y, _ in self.makombora:\r\n            pyxel.pix(x, y, 8)\r\n        self.makombora = [(x+1*direction, y, direction) \\\r\n                for x, y, direction in self.makombora if x < 160 and x > 0]\r\n\r\n        # draw score\r\n        pyxel.text(5, 4, f"SCORE: {self.score}", 1)\r\n        pyxel.text(4, 4, f"SCORE: {self.score}", 7)\r\nApp()	<p>\r\nIn the last challenge, you added a True/False value that describes when a limau has been <code>hit</code>. Now you will change this when the girl touches a limau.\r\n</p>\r\n<p>\r\nFind your <code>update_score(self)</code> function. Delete the line inside of it and replace it with this:\r\n</p>\r\n<center><code>self.malimau = [(x, y, ________ if _______ else ________) for x, y, hit in self.malimau]</code></center>\r\n<br/>\r\n<p>\r\nIf the absolute value of <code>x - self.player_x</code> is less than 14 <b>and</b> the absolute value of <code>y - self.player_y</code> is less than 14, we know that the girl has touched the limau: yaani, <code>hit</code> should be <code>True</code>. <b>Else</b>, the girl hasn't touched the limau: yaani, <code>hit</code> should be <code>False</code>.\r\n</p>\r\n<p>(Hint: Use Python's <code>abs()</code> function to take the absolute value of any number you give it.)</p>	# Note: PD_STATIC_IMAGES_PATH varies based on address\r\n# of server and thus is prepended to this value in views.py\r\nimport os, requests\r\nBASE_DIR = os.path.dirname(os.path.abspath(__file__))\r\nfiles_to_load = ['sprites2.png']\r\nfor fname in files_to_load:\r\n  fpath = os.path.join(BASE_DIR, fname)\r\n  if not os.path.exists(fpath):\r\n    with open(fpath, 'wb') as f:\r\n      f.write(requests.get(PD_STATIC_IMAGES_PATH+fname).content)
