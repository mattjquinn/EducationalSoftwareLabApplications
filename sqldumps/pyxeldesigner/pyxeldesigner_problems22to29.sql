25	Add Makombora	22	### IMPORTANT: Preamble required on server; omitted here. ####\r\n\r\nimport pyxel\r\n\r\nclass App:\r\n    def __init__(self):\r\n        pyxel.init(160, 120, caption='Mchezo')\r\n\r\n        pyxel.image(0).load(0, 0, 'sprites2.png')\r\n\r\n        self.clouds = [(10, 10), (60, 20), (120, 5)]\r\n        self.player_x = 70\r\n        self.player_y = 50\r\n        self.score = 0\r\n        # SOLN: Adding this line\r\n        self.makombora = []\r\n\r\n        pyxel.run(self.update, self.draw)\r\n\r\n    def update(self):\r\n        if pyxel.btnp(pyxel.KEY_ESCAPE):\r\n            pyxel.quit()\r\n\r\n        self.update_player()\r\n\r\n        self.update_score()\r\n\r\n    def update_score(self):\r\n        if self.player_y < 0:\r\n            self.score += 1\r\n\r\n    def update_player(self):\r\n        if pyxel.btn(pyxel.KEY_W) or pyxel.btn(pyxel.KEY_UP):\r\n            self.player_y -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_A) or pyxel.btn(pyxel.KEY_LEFT):\r\n            self.player_x -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_S) or pyxel.btn(pyxel.KEY_DOWN):\r\n            self.player_y += 2\r\n\r\n        if pyxel.btn(pyxel.KEY_D) or pyxel.btn(pyxel.KEY_RIGHT):\r\n            self.player_x += 2\r\n\r\n        # SOLN: Adding this block\r\n        if pyxel.btnp(pyxel.KEY_SPACE):\r\n            self.makombora.append((self.player_x, self.player_y))\r\n\r\n    def draw(self):\r\n    \t# clear screen, paint sky blue\r\n        pyxel.cls(12)\r\n\r\n        # draw horizon + mountain + forest\r\n        pyxel.blt(0, 0, 0, 0, 120, 160, 120)\r\n\r\n        # draw clouds\r\n        offset = (pyxel.frame_count / 4) % 160\r\n        for i in range(2):\r\n          for x, y in self.clouds:\r\n            pyxel.blt(x + (i * 160) - offset, y, 0, 0, 32, 56, 8)\r\n\r\n        # draw girl\r\n        pyxel.blt(self.player_x, self.player_y, 0, 0, 0, 16, 16, 12)\r\n\r\n        # SOLN: Adding this block\r\n        # draw makombora\r\n        for x, y in self.makombora:\r\n            pyxel.pix(x, y, 8)\r\n\r\n        # draw score\r\n        pyxel.text(5, 4, f"SCORE: {self.score}", 1)\r\n        pyxel.text(4, 4, f"SCORE: {self.score}", 7)\r\nApp()	The girl can move, but we should allow her to do other things as well. Let's give her the ability to shoot makombora. Here's what you need to do:\r\n<br/><br/>\r\n<ul>\r\n  <li>In your <code>__init__(self)</code> function, add a variable called <code>self.makombora</code> and put an empty list inside of it.</li>\r\n  <li>Whenever the player presses the spacebar key, append a new kombora to <code>self.makombora</code>. Each kombora should be an (x, y) pair, and they should be the player's x and y values. (<b>IMPORTANT</b>: Use Pyxel's <code>btnp</code> function for this, do not use Pyxel's <code>btn</code> function.)</li>\r\n  <li>Draw each kombora on the screen using a <code>for</code> loop. For each (x, y) in <code>self.makombora</code>, draw a red pixel at that (x, y) location. Use Pyxel's <code>pix</code> function to do this. (<b>IMPORTANT</b>: When you draw the makombora, make sure they are on top of everything <code>except</code> the score. The score should always be on top of everything else.)</li>\r\n</ul>	# Note: PD_STATIC_IMAGES_PATH varies based on address\r\n# of server and thus is prepended to this value in views.py\r\nimport os, requests\r\nBASE_DIR = os.path.dirname(os.path.abspath(__file__))\r\nfiles_to_load = ['sprites2.png']\r\nfor fname in files_to_load:\r\n  fpath = os.path.join(BASE_DIR, fname)\r\n  if not os.path.exists(fpath):\r\n    with open(fpath, 'wb') as f:\r\n      f.write(requests.get(PD_STATIC_IMAGES_PATH+fname).content)
26	Move Makombora	23	### IMPORTANT: Preamble required on server; omitted here. ####\r\n\r\nimport pyxel\r\n\r\nclass App:\r\n    def __init__(self):\r\n        pyxel.init(160, 120, caption='Mchezo')\r\n\r\n        pyxel.image(0).load(0, 0, 'sprites2.png')\r\n\r\n        self.clouds = [(10, 10), (60, 20), (120, 5)]\r\n        self.player_x = 70\r\n        self.player_y = 50\r\n        self.score = 0\r\n        self.makombora = []\r\n\r\n        pyxel.run(self.update, self.draw)\r\n\r\n    def update(self):\r\n        if pyxel.btnp(pyxel.KEY_ESCAPE):\r\n            pyxel.quit()\r\n\r\n        self.update_player()\r\n\r\n        self.update_score()\r\n\r\n    def update_score(self):\r\n        if self.player_y < 0:\r\n            self.score += 1\r\n\r\n    def update_player(self):\r\n        if pyxel.btn(pyxel.KEY_W) or pyxel.btn(pyxel.KEY_UP):\r\n            self.player_y -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_A) or pyxel.btn(pyxel.KEY_LEFT):\r\n            self.player_x -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_S) or pyxel.btn(pyxel.KEY_DOWN):\r\n            self.player_y += 2\r\n\r\n        if pyxel.btn(pyxel.KEY_D) or pyxel.btn(pyxel.KEY_RIGHT):\r\n            self.player_x += 2\r\n\r\n        if pyxel.btnp(pyxel.KEY_SPACE):\r\n            self.makombora.append((self.player_x, self.player_y))\r\n\r\n    def draw(self):\r\n    \t# clear screen, paint sky blue\r\n        pyxel.cls(12)\r\n\r\n        # draw horizon + mountain + forest\r\n        pyxel.blt(0, 0, 0, 0, 120, 160, 120)\r\n\r\n        # draw clouds\r\n        offset = (pyxel.frame_count / 4) % 160\r\n        for i in range(2):\r\n          for x, y in self.clouds:\r\n            pyxel.blt(x + (i * 160) - offset, y, 0, 0, 32, 56, 8)\r\n\r\n        # draw girl\r\n        pyxel.blt(self.player_x, self.player_y, 0, 0, 0, 16, 16, 12)\r\n\r\n        # draw makombora\r\n        for x, y in self.makombora:\r\n            pyxel.pix(x, y, 8)\r\n        # SOLN: Added this line\r\n        self.makombora = [(x+1, y) for x, y in self.makombora]\r\n\r\n        # draw score\r\n        pyxel.text(5, 4, f"SCORE: {self.score}", 1)\r\n        pyxel.text(4, 4, f"SCORE: {self.score}", 7)\r\nApp()	We now have makombora on the screen, but they don't move. Your goal in this challenge is to make them move.\r\n<br/><br/>\r\nThe easiest way to do this is by replacing each kombora in <code>self.makombora</code> with a new kombora that has its x value increased by 1. See if you can do this yourself. Copy this line:\r\n<br/><br/>\r\n<center><code>self.makombora = [____________ for x, y in self.makombora]</code></center>\r\n<br/><br/>\r\nand paste it directly below your code that draws the makombora on the screen. Then fill in the blank so that each kombora is replaced by a new kombora 1 pixel to the right. Press "Goal" to see what should happen.	# Note: PD_STATIC_IMAGES_PATH varies based on address\r\n# of server and thus is prepended to this value in views.py\r\nimport os, requests\r\nBASE_DIR = os.path.dirname(os.path.abspath(__file__))\r\nfiles_to_load = ['sprites2.png']\r\nfor fname in files_to_load:\r\n  fpath = os.path.join(BASE_DIR, fname)\r\n  if not os.path.exists(fpath):\r\n    with open(fpath, 'wb') as f:\r\n      f.write(requests.get(PD_STATIC_IMAGES_PATH+fname).content)
27	Points for Shooting Makombora	24	### IMPORTANT: Preamble required on server; omitted here. ####\r\n\r\nimport pyxel\r\n\r\nclass App:\r\n    def __init__(self):\r\n        pyxel.init(160, 120, caption='Mchezo')\r\n\r\n        pyxel.image(0).load(0, 0, 'sprites2.png')\r\n\r\n        self.clouds = [(10, 10), (60, 20), (120, 5)]\r\n        self.player_x = 70\r\n        self.player_y = 50\r\n        self.score = 0\r\n        self.makombora = []\r\n\r\n        pyxel.run(self.update, self.draw)\r\n\r\n    def update(self):\r\n        if pyxel.btnp(pyxel.KEY_ESCAPE):\r\n            pyxel.quit()\r\n\r\n        self.update_player()\r\n\r\n        self.update_score()\r\n\r\n    def update_score(self):\r\n        # SOLN: Replaced if with this stmt\r\n        self.score = len(self.makombora)\r\n\r\n    def update_player(self):\r\n        if pyxel.btn(pyxel.KEY_W) or pyxel.btn(pyxel.KEY_UP):\r\n            self.player_y -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_A) or pyxel.btn(pyxel.KEY_LEFT):\r\n            self.player_x -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_S) or pyxel.btn(pyxel.KEY_DOWN):\r\n            self.player_y += 2\r\n\r\n        if pyxel.btn(pyxel.KEY_D) or pyxel.btn(pyxel.KEY_RIGHT):\r\n            self.player_x += 2\r\n\r\n        if pyxel.btnp(pyxel.KEY_SPACE):\r\n            self.makombora.append((self.player_x, self.player_y))\r\n\r\n    def draw(self):\r\n    \t# clear screen, paint sky blue\r\n        pyxel.cls(12)\r\n\r\n        # draw horizon + mountain + forest\r\n        pyxel.blt(0, 0, 0, 0, 120, 160, 120)\r\n\r\n        # draw clouds\r\n        offset = (pyxel.frame_count / 4) % 160\r\n        for i in range(2):\r\n          for x, y in self.clouds:\r\n            pyxel.blt(x + (i * 160) - offset, y, 0, 0, 32, 56, 8)\r\n\r\n        # draw girl\r\n        pyxel.blt(self.player_x, self.player_y, 0, 0, 0, 16, 16, 12)\r\n\r\n        # draw makombora\r\n        for x, y in self.makombora:\r\n            pyxel.pix(x, y, 8)\r\n        self.makombora = [(x+1, y) for x, y in self.makombora]\r\n\r\n        # draw score\r\n        pyxel.text(5, 4, f"SCORE: {self.score}", 1)\r\n        pyxel.text(4, 4, f"SCORE: {self.score}", 7)\r\nApp()	In your <code>update_score(self)</code> function, change the code so that the player gets a point for each kombora he/she shoots.\r\n<br/><br/>\r\n(<b>HINT</b>: There is a very simple solution if you think carefully first. Think about which variable holds the makombora. Then think about how you can use Python's <code>len()</code> function: if you give a list to <code>len()</code>, it will tell you how many items are in that list.)	# Note: PD_STATIC_IMAGES_PATH varies based on address\r\n# of server and thus is prepended to this value in views.py\r\nimport os, requests\r\nBASE_DIR = os.path.dirname(os.path.abspath(__file__))\r\nfiles_to_load = ['sprites2.png']\r\nfor fname in files_to_load:\r\n  fpath = os.path.join(BASE_DIR, fname)\r\n  if not os.path.exists(fpath):\r\n    with open(fpath, 'wb') as f:\r\n      f.write(requests.get(PD_STATIC_IMAGES_PATH+fname).content)
28	Remove Offscreen Makombora	25	### IMPORTANT: Preamble required on server; omitted here. ####\r\n\r\nimport pyxel\r\n\r\nclass App:\r\n    def __init__(self):\r\n        pyxel.init(160, 120, caption='Mchezo')\r\n\r\n        pyxel.image(0).load(0, 0, 'sprites2.png')\r\n\r\n        self.clouds = [(10, 10), (60, 20), (120, 5)]\r\n        self.player_x = 70\r\n        self.player_y = 50\r\n        self.score = 0\r\n        self.makombora = []\r\n\r\n        pyxel.run(self.update, self.draw)\r\n\r\n    def update(self):\r\n        if pyxel.btnp(pyxel.KEY_ESCAPE):\r\n            pyxel.quit()\r\n\r\n        self.update_player()\r\n\r\n        self.update_score()\r\n\r\n    def update_score(self):\r\n        self.score = len(self.makombora)\r\n\r\n    def update_player(self):\r\n        if pyxel.btn(pyxel.KEY_W) or pyxel.btn(pyxel.KEY_UP):\r\n            self.player_y -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_A) or pyxel.btn(pyxel.KEY_LEFT):\r\n            self.player_x -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_S) or pyxel.btn(pyxel.KEY_DOWN):\r\n            self.player_y += 2\r\n\r\n        if pyxel.btn(pyxel.KEY_D) or pyxel.btn(pyxel.KEY_RIGHT):\r\n            self.player_x += 2\r\n\r\n        if pyxel.btnp(pyxel.KEY_SPACE):\r\n            self.makombora.append((self.player_x, self.player_y))\r\n\r\n    def draw(self):\r\n    \t# clear screen, paint sky blue\r\n        pyxel.cls(12)\r\n\r\n        # draw horizon + mountain + forest\r\n        pyxel.blt(0, 0, 0, 0, 120, 160, 120)\r\n\r\n        # draw clouds\r\n        offset = (pyxel.frame_count / 4) % 160\r\n        for i in range(2):\r\n          for x, y in self.clouds:\r\n            pyxel.blt(x + (i * 160) - offset, y, 0, 0, 32, 56, 8)\r\n\r\n        # draw girl\r\n        pyxel.blt(self.player_x, self.player_y, 0, 0, 0, 16, 16, 12)\r\n\r\n        # draw makombora\r\n        for x, y in self.makombora:\r\n            pyxel.pix(x, y, 8)\r\n        # SOLN: Added if clause to below line\r\n        self.makombora = [(x+1, y) for x, y in self.makombora if x < 160]\r\n\r\n        # draw score\r\n        pyxel.text(5, 4, f"SCORE: {self.score}", 1)\r\n        pyxel.text(4, 4, f"SCORE: {self.score}", 7)\r\nApp()	Notice how we have a small problem. After we shoot a kombora, it eventually disappears off the screen. Even though we can't see it anymore, it's still in the list of makombora. Instead of keeping it in the list, we should remove it.\r\n<br/><br/>\r\nIn an earlier challenge, you added this line to move each kombora 1 pixel to the right:\r\n<br/>\r\n<code><center>self.makombora = [(x+1, y) for x, y in self.makombora]</center></code>\r\n<br/>\r\nAdd an if to the end:\r\n<br/>\r\n<code><center>self.makombora = [(x+1, y) for x, y in self.makombora if _________]</center></code>\r\n<br/>\r\nand fill in the blank so that each kombora is kept in the list only <b> if its X value is less than the width of the screen.</b>	# Note: PD_STATIC_IMAGES_PATH varies based on address\r\n# of server and thus is prepended to this value in views.py\r\nimport os, requests\r\nBASE_DIR = os.path.dirname(os.path.abspath(__file__))\r\nfiles_to_load = ['sprites2.png']\r\nfor fname in files_to_load:\r\n  fpath = os.path.join(BASE_DIR, fname)\r\n  if not os.path.exists(fpath):\r\n    with open(fpath, 'wb') as f:\r\n      f.write(requests.get(PD_STATIC_IMAGES_PATH+fname).content)
29	Allow the Player to Face the Other Way	26	### IMPORTANT: Preamble required on server; omitted here. ####\r\n\r\nimport pyxel\r\n\r\nclass App:\r\n    def __init__(self):\r\n        pyxel.init(160, 120, caption='Mchezo')\r\n\r\n        pyxel.image(0).load(0, 0, 'sprites2.png')\r\n\r\n        self.clouds = [(10, 10), (60, 20), (120, 5)]\r\n        self.player_x = 70\r\n        self.player_y = 50\r\n        self.score = 0\r\n        self.makombora = []\r\n        # SOLN: Added this line\r\n        self.player_x_flip = 1\r\n\r\n        pyxel.run(self.update, self.draw)\r\n\r\n    def update(self):\r\n        if pyxel.btnp(pyxel.KEY_ESCAPE):\r\n            pyxel.quit()\r\n\r\n        self.update_player()\r\n\r\n        self.update_score()\r\n\r\n    def update_score(self):\r\n        self.score = len(self.makombora)\r\n\r\n    def update_player(self):\r\n        if pyxel.btn(pyxel.KEY_W) or pyxel.btn(pyxel.KEY_UP):\r\n            self.player_y -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_A) or pyxel.btn(pyxel.KEY_LEFT):\r\n            self.player_x -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_S) or pyxel.btn(pyxel.KEY_DOWN):\r\n            self.player_y += 2\r\n\r\n        if pyxel.btn(pyxel.KEY_D) or pyxel.btn(pyxel.KEY_RIGHT):\r\n            self.player_x += 2\r\n\r\n        if pyxel.btnp(pyxel.KEY_SPACE):\r\n            self.makombora.append((self.player_x, self.player_y))\r\n\r\n        # SOLN: Added if to flip player\r\n        if pyxel.btnp(pyxel.KEY_F):\r\n            self.player_x_flip *= -1\r\n\r\n    def draw(self):\r\n    \t# clear screen, paint sky blue\r\n        pyxel.cls(12)\r\n\r\n        # draw horizon + mountain + forest\r\n        pyxel.blt(0, 0, 0, 0, 120, 160, 120)\r\n\r\n        # draw clouds\r\n        offset = (pyxel.frame_count / 4) % 160\r\n        for i in range(2):\r\n          for x, y in self.clouds:\r\n            pyxel.blt(x + (i * 160) - offset, y, 0, 0, 32, 56, 8)\r\n\r\n        # draw girl\r\n        # SOLN: Added mult to player's width for flipping\r\n        pyxel.blt(self.player_x, self.player_y, 0, 0, 0,\r\n                16*self.player_x_flip, 16, 12)\r\n\r\n        # draw makombora\r\n        for x, y in self.makombora:\r\n            pyxel.pix(x, y, 8)\r\n        self.makombora = [(x+1, y) for x, y in self.makombora if x < 160]\r\n\r\n        # draw score\r\n        pyxel.text(5, 4, f"SCORE: {self.score}", 1)\r\n        pyxel.text(4, 4, f"SCORE: {self.score}", 7)\r\nApp()	Have you noticed that the girl in our game always faces right? Let's also allow her to face left. Complete these three steps to do so:\r\n<br/><br/>\r\n<ul>\r\n  <li>In your <code>__init__(self)</code> function, add a new variable called <code>self.player_xdir</code> and set it equal to 1.</li>\r\n  <li>In your <code>update_player(self)</code> function, multiply <code>self.player_xdir</code> by <code>-1</code> every time the player presses the "F" key. (<b>Use Pyxel's <code>btnp</code> function for this, not the <code>btn</code> function.</b>)\r\n  <li>Finally, find your code that draws the girl on the screen. Multiply the girl's width by <code>self.player_xdir</code>.</li>\r\n</ul>	# Note: PD_STATIC_IMAGES_PATH varies based on address\r\n# of server and thus is prepended to this value in views.py\r\nimport os, requests\r\nBASE_DIR = os.path.dirname(os.path.abspath(__file__))\r\nfiles_to_load = ['sprites2.png']\r\nfor fname in files_to_load:\r\n  fpath = os.path.join(BASE_DIR, fname)\r\n  if not os.path.exists(fpath):\r\n    with open(fpath, 'wb') as f:\r\n      f.write(requests.get(PD_STATIC_IMAGES_PATH+fname).content)
30	When Facing Left, Shoot Makombora Left	27	### IMPORTANT: Preamble required on server; omitted here. ####\r\n\r\nimport pyxel\r\n\r\nclass App:\r\n    def __init__(self):\r\n        pyxel.init(160, 120, caption='Mchezo')\r\n\r\n        pyxel.image(0).load(0, 0, 'sprites2.png')\r\n\r\n        self.clouds = [(10, 10), (60, 20), (120, 5)]\r\n        self.player_x = 70\r\n        self.player_y = 50\r\n        self.score = 0\r\n        self.makombora = []\r\n        self.player_xdir = 1\r\n\r\n        pyxel.run(self.update, self.draw)\r\n\r\n    def update(self):\r\n        if pyxel.btnp(pyxel.KEY_ESCAPE):\r\n            pyxel.quit()\r\n\r\n        self.update_player()\r\n\r\n        self.update_score()\r\n\r\n    def update_score(self):\r\n        self.score = len(self.makombora)\r\n\r\n    def update_player(self):\r\n        if pyxel.btn(pyxel.KEY_W) or pyxel.btn(pyxel.KEY_UP):\r\n            self.player_y -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_A) or pyxel.btn(pyxel.KEY_LEFT):\r\n            self.player_x -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_S) or pyxel.btn(pyxel.KEY_DOWN):\r\n            self.player_y += 2\r\n\r\n        if pyxel.btn(pyxel.KEY_D) or pyxel.btn(pyxel.KEY_RIGHT):\r\n            self.player_x += 2\r\n\r\n        if pyxel.btnp(pyxel.KEY_SPACE):\r\n            # SOLN: Adding direction kombora should travel in\r\n            self.makombora.append((self.player_x, self.player_y, self.player_xdir))\r\n\r\n        if pyxel.btnp(pyxel.KEY_F):\r\n            self.player_xdir *= -1\r\n\r\n    def draw(self):\r\n    \t# clear screen, paint sky blue\r\n        pyxel.cls(12)\r\n\r\n        # draw horizon + mountain + forest\r\n        pyxel.blt(0, 0, 0, 0, 120, 160, 120)\r\n\r\n        # draw clouds\r\n        offset = (pyxel.frame_count / 4) % 160\r\n        for i in range(2):\r\n          for x, y in self.clouds:\r\n            pyxel.blt(x + (i * 160) - offset, y, 0, 0, 32, 56, 8)\r\n\r\n        # draw girl\r\n        pyxel.blt(self.player_x, self.player_y, 0, 0, 0,\r\n                16*self.player_xdir, 16, 12)\r\n\r\n        # draw makombora\r\n        # SOLN: Adding wildcard for direction parameter\r\n        for x, y, _ in self.makombora:\r\n            pyxel.pix(x, y, 8)\r\n        # SOLN: Adding direction of travel\r\n        self.makombora = [(x+1*direction, y, direction) \\\r\n                for x, y, direction in self.makombora if x < 160]\r\n\r\n        # draw score\r\n        pyxel.text(5, 4, f"SCORE: {self.score}", 1)\r\n        pyxel.text(4, 4, f"SCORE: {self.score}", 7)\r\nApp()	It's good that the girl can now face left. But what happens when she faces left and shoots makombora? Instead of going left, the makombora go right. Let's fix this now.\r\n<br/><br/>\r\nFirst, find the line that appends a new kombora to <code>self.makombora</code>. Add a third item to each kombora: <code>self.player_xdir</code>\r\n<br/><br/>\r\nNext, find your code that draws makombora to the screen. You have a <code>for</code> loop followed by a line that updates each kombora's position. Change these so that instead of just getting <code>(x, y)</code>, each loop gets <code>(x, y, direction)</code> instead. Then, instead of moving each kombora to <code>(x + 1, y)</code>, move them instead to <code>(x + 1 * direction, y)</code>.	# Note: PD_STATIC_IMAGES_PATH varies based on address\r\n# of server and thus is prepended to this value in views.py\r\nimport os, requests\r\nBASE_DIR = os.path.dirname(os.path.abspath(__file__))\r\nfiles_to_load = ['sprites2.png']\r\nfor fname in files_to_load:\r\n  fpath = os.path.join(BASE_DIR, fname)\r\n  if not os.path.exists(fpath):\r\n    with open(fpath, 'wb') as f:\r\n      f.write(requests.get(PD_STATIC_IMAGES_PATH+fname).content)
31	Remove Left-Flying Offscreen Makombora	28	### IMPORTANT: Preamble required on server; omitted here. ####\r\n\r\nimport pyxel\r\n\r\nclass App:\r\n    def __init__(self):\r\n        pyxel.init(160, 120, caption='Mchezo')\r\n\r\n        pyxel.image(0).load(0, 0, 'sprites2.png')\r\n\r\n        self.clouds = [(10, 10), (60, 20), (120, 5)]\r\n        self.player_x = 70\r\n        self.player_y = 50\r\n        self.score = 0\r\n        self.makombora = []\r\n        self.player_xdir = 1\r\n\r\n        pyxel.run(self.update, self.draw)\r\n\r\n    def update(self):\r\n        if pyxel.btnp(pyxel.KEY_ESCAPE):\r\n            pyxel.quit()\r\n\r\n        self.update_player()\r\n\r\n        self.update_score()\r\n\r\n    def update_score(self):\r\n        self.score = len(self.makombora)\r\n\r\n    def update_player(self):\r\n        if pyxel.btn(pyxel.KEY_W) or pyxel.btn(pyxel.KEY_UP):\r\n            self.player_y -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_A) or pyxel.btn(pyxel.KEY_LEFT):\r\n            self.player_x -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_S) or pyxel.btn(pyxel.KEY_DOWN):\r\n            self.player_y += 2\r\n\r\n        if pyxel.btn(pyxel.KEY_D) or pyxel.btn(pyxel.KEY_RIGHT):\r\n            self.player_x += 2\r\n\r\n        if pyxel.btnp(pyxel.KEY_SPACE):\r\n            self.makombora.append((self.player_x, self.player_y, self.player_xdir))\r\n\r\n        if pyxel.btnp(pyxel.KEY_F):\r\n            self.player_xdir *= -1\r\n\r\n    def draw(self):\r\n    \t# clear screen, paint sky blue\r\n        pyxel.cls(12)\r\n\r\n        # draw horizon + mountain + forest\r\n        pyxel.blt(0, 0, 0, 0, 120, 160, 120)\r\n\r\n        # draw clouds\r\n        offset = (pyxel.frame_count / 4) % 160\r\n        for i in range(2):\r\n          for x, y in self.clouds:\r\n            pyxel.blt(x + (i * 160) - offset, y, 0, 0, 32, 56, 8)\r\n\r\n        # draw girl\r\n        pyxel.blt(self.player_x, self.player_y, 0, 0, 0,\r\n                16*self.player_xdir, 16, 12)\r\n\r\n        # draw makombora\r\n        for x, y, _ in self.makombora:\r\n            pyxel.pix(x, y, 8)\r\n        # SOLN: Added and x > 0 to if clause\r\n        self.makombora = [(x+1*direction, y, direction) \\\r\n                for x, y, direction in self.makombora if x < 160 and x > 0]\r\n\r\n        # draw score\r\n        pyxel.text(5, 4, f"SCORE: {self.score}", 1)\r\n        pyxel.text(4, 4, f"SCORE: {self.score}", 7)\r\nApp()	Now that you succeeded to make makombora fly left, you need to remove them once they go off the screen. In a previous challenge, you added <code>if x < 160</code> to remove makombora that fly off the right side of the screen. Add something to this <code>if</code> so that it also removes makombora that fly off the left side of the screen.\r\n<br/><br/>\r\n(<b>Hint:</b> whenever a kombora's X value becomes <b>negative</b>, it has gone off the left side of the screen.)	# Note: PD_STATIC_IMAGES_PATH varies based on address\r\n# of server and thus is prepended to this value in views.py\r\nimport os, requests\r\nBASE_DIR = os.path.dirname(os.path.abspath(__file__))\r\nfiles_to_load = ['sprites2.png']\r\nfor fname in files_to_load:\r\n  fpath = os.path.join(BASE_DIR, fname)\r\n  if not os.path.exists(fpath):\r\n    with open(fpath, 'wb') as f:\r\n      f.write(requests.get(PD_STATIC_IMAGES_PATH+fname).content)
32	Shoot from the Hip	29	### IMPORTANT: Preamble required on server; omitted here. ####\r\n\r\nimport pyxel\r\n\r\nclass App:\r\n    def __init__(self):\r\n        pyxel.init(160, 120, caption='Mchezo')\r\n\r\n        pyxel.image(0).load(0, 0, 'sprites2.png')\r\n\r\n        self.clouds = [(10, 10), (60, 20), (120, 5)]\r\n        self.player_x = 70\r\n        self.player_y = 50\r\n        self.score = 0\r\n        self.makombora = []\r\n        self.player_xdir = 1\r\n\r\n        pyxel.run(self.update, self.draw)\r\n\r\n    def update(self):\r\n        if pyxel.btnp(pyxel.KEY_ESCAPE):\r\n            pyxel.quit()\r\n\r\n        self.update_player()\r\n\r\n        self.update_score()\r\n\r\n    def update_score(self):\r\n        self.score = len(self.makombora)\r\n\r\n    def update_player(self):\r\n        if pyxel.btn(pyxel.KEY_W) or pyxel.btn(pyxel.KEY_UP):\r\n            self.player_y -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_A) or pyxel.btn(pyxel.KEY_LEFT):\r\n            self.player_x -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_S) or pyxel.btn(pyxel.KEY_DOWN):\r\n            self.player_y += 2\r\n\r\n        if pyxel.btn(pyxel.KEY_D) or pyxel.btn(pyxel.KEY_RIGHT):\r\n            self.player_x += 2\r\n\r\n        if pyxel.btnp(pyxel.KEY_SPACE):\r\n            # SOLN: Changing starting X and Y of makombora\r\n            self.makombora.append((self.player_x+8, \\\r\n                    self.player_y+8, self.player_xdir))\r\n\r\n        if pyxel.btnp(pyxel.KEY_F):\r\n            self.player_xdir *= -1\r\n\r\n    def draw(self):\r\n    \t# clear screen, paint sky blue\r\n        pyxel.cls(12)\r\n\r\n        # draw horizon + mountain + forest\r\n        pyxel.blt(0, 0, 0, 0, 120, 160, 120)\r\n\r\n        # draw clouds\r\n        offset = (pyxel.frame_count / 4) % 160\r\n        for i in range(2):\r\n          for x, y in self.clouds:\r\n            pyxel.blt(x + (i * 160) - offset, y, 0, 0, 32, 56, 8)\r\n\r\n        # draw girl\r\n        pyxel.blt(self.player_x, self.player_y, 0, 0, 0,\r\n                16*self.player_xdir, 16, 12)\r\n\r\n        # draw makombora\r\n        for x, y, _ in self.makombora:\r\n            pyxel.pix(x, y, 8)\r\n        self.makombora = [(x+1*direction, y, direction) \\\r\n                for x, y, direction in self.makombora if x < 160 and x > 0]\r\n\r\n        # draw score\r\n        pyxel.text(5, 4, f"SCORE: {self.score}", 1)\r\n        pyxel.text(4, 4, f"SCORE: {self.score}", 7)\r\nApp()	When the girl shoots makombora, they appear to come out of her head. Change this so that the makombora come from the center of the girl.\r\n<br/><br/>\r\nIn your code, find the line that appends a new kombora to the list of makombora. Make <b>two changes</b> to this line so that makombora come from the center of the girl. <b>You should change only this line to solve this challenge.</b>	# Note: PD_STATIC_IMAGES_PATH varies based on address\r\n# of server and thus is prepended to this value in views.py\r\nimport os, requests\r\nBASE_DIR = os.path.dirname(os.path.abspath(__file__))\r\nfiles_to_load = ['sprites2.png']\r\nfor fname in files_to_load:\r\n  fpath = os.path.join(BASE_DIR, fname)\r\n  if not os.path.exists(fpath):\r\n    with open(fpath, 'wb') as f:\r\n      f.write(requests.get(PD_STATIC_IMAGES_PATH+fname).content)
