22	Adding a Shadow Underneath the Score	19	### IMPORTANT: Preamble required on server; omitted here. ####\r\n\r\nimport pyxel\r\n\r\nclass App:\r\n    def __init__(self):\r\n        pyxel.init(160, 120, caption='Mchezo')\r\n\r\n        pyxel.image(0).load(0, 0, 'sprites2.png')\r\n\r\n        self.clouds = [(10, 10), (60, 20), (120, 5)]\r\n        self.player_x = 70\r\n        self.player_y = 50\r\n\r\n        pyxel.run(self.update, self.draw)\r\n\r\n    def update(self):\r\n        if pyxel.btnp(pyxel.KEY_ESCAPE):\r\n            pyxel.quit()\r\n\r\n        self.update_player()\r\n\r\n    def update_player(self):\r\n        if pyxel.btn(pyxel.KEY_W) or pyxel.btn(pyxel.KEY_UP):\r\n            self.player_y -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_A) or pyxel.btn(pyxel.KEY_LEFT):\r\n            self.player_x -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_S) or pyxel.btn(pyxel.KEY_DOWN):\r\n            self.player_y += 2\r\n\r\n        if pyxel.btn(pyxel.KEY_D) or pyxel.btn(pyxel.KEY_RIGHT):\r\n            self.player_x += 2\r\n\r\n    def draw(self):\r\n    \t# clear screen, paint sky blue\r\n        pyxel.cls(12)\r\n\r\n        # draw horizon + mountain + forest\r\n        pyxel.blt(0, 0, 0, 0, 120, 160, 120)\r\n\r\n        # draw clouds\r\n        offset = (pyxel.frame_count / 4) % 160\r\n        for i in range(2):\r\n          for x, y in self.clouds:\r\n            pyxel.blt(x + (i * 160) - offset, y, 0, 0, 32, 56, 8)\r\n\r\n        # draw girl\r\n        pyxel.blt(self.player_x, self.player_y, 0, 0, 0, 16, 16, 12)\r\n\r\n        # draw score\r\n        # SOLN: Added this line here to draw a shadow\r\n        pyxel.text(5, 4, "SCORE: ?", 1)\r\n        pyxel.text(4, 4, "SCORE: ?", 7)\r\nApp()	It's hard to see the score sometimes, especially when a cloud passes underneath it. Let's add a black shadow under the letters of the text so we can read it better.\r\n<br/><br/>\r\nUnderneath your <code>SCORE: ?</code>, draw another <code>SCORE: ?</code>, this time one pixel to the right. Make sure this new text is colored black. Click "Goal" to see what yours should look like.	# Note: PD_STATIC_IMAGES_PATH varies based on address\r\n# of server and thus is prepended to this value in views.py\r\nimport os, requests\r\nBASE_DIR = os.path.dirname(os.path.abspath(__file__))\r\nfiles_to_load = ['sprites2.png']\r\nfor fname in files_to_load:\r\n  fpath = os.path.join(BASE_DIR, fname)\r\n  if not os.path.exists(fpath):\r\n    with open(fpath, 'wb') as f:\r\n      f.write(requests.get(PD_STATIC_IMAGES_PATH+fname).content)
24	Give Points for Getting High	21	### IMPORTANT: Preamble required on server; omitted here. ####\r\n\r\nimport pyxel\r\n\r\nclass App:\r\n    def __init__(self):\r\n        pyxel.init(160, 120, caption='Mchezo')\r\n\r\n        pyxel.image(0).load(0, 0, 'sprites2.png')\r\n\r\n        self.clouds = [(10, 10), (60, 20), (120, 5)]\r\n        self.player_x = 70\r\n        self.player_y = 50\r\n        self.score = 0\r\n\r\n        pyxel.run(self.update, self.draw)\r\n\r\n    def update(self):\r\n        if pyxel.btnp(pyxel.KEY_ESCAPE):\r\n            pyxel.quit()\r\n\r\n        self.update_player()\r\n\r\n        # SOLN: Added this line\r\n        self.update_score()\r\n\r\n    # SOLN: Added this function\r\n    def update_score(self):\r\n        if self.player_y < 0:\r\n            self.score += 1\r\n\r\n    def update_player(self):\r\n        if pyxel.btn(pyxel.KEY_W) or pyxel.btn(pyxel.KEY_UP):\r\n            self.player_y -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_A) or pyxel.btn(pyxel.KEY_LEFT):\r\n            self.player_x -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_S) or pyxel.btn(pyxel.KEY_DOWN):\r\n            self.player_y += 2\r\n\r\n        if pyxel.btn(pyxel.KEY_D) or pyxel.btn(pyxel.KEY_RIGHT):\r\n            self.player_x += 2\r\n\r\n    def draw(self):\r\n    \t# clear screen, paint sky blue\r\n        pyxel.cls(12)\r\n\r\n        # draw horizon + mountain + forest\r\n        pyxel.blt(0, 0, 0, 0, 120, 160, 120)\r\n\r\n        # draw clouds\r\n        offset = (pyxel.frame_count / 4) % 160\r\n        for i in range(2):\r\n          for x, y in self.clouds:\r\n            pyxel.blt(x + (i * 160) - offset, y, 0, 0, 32, 56, 8)\r\n\r\n        # draw girl\r\n        pyxel.blt(self.player_x, self.player_y, 0, 0, 0, 16, 16, 12)\r\n\r\n        # draw score\r\n        pyxel.text(5, 4, f"SCORE: {self.score}", 1)\r\n        pyxel.text(4, 4, f"SCORE: {self.score}", 7)\r\nApp()	Now let's give the player points if he/she moves the girl to the top of the screen.\r\n<br/><br/>\r\nCreate a new function called <code>update_score(self)</code>. Call this function at the end of your <code>update(self)</code> function, then write code inside your new <code>update_score(self)</code> function that gives the player a point each time the girl's Y coordinate is <b>less than 0</b>.	# Note: PD_STATIC_IMAGES_PATH varies based on address\r\n# of server and thus is prepended to this value in views.py\r\nimport os, requests\r\nBASE_DIR = os.path.dirname(os.path.abspath(__file__))\r\nfiles_to_load = ['sprites2.png']\r\nfor fname in files_to_load:\r\n  fpath = os.path.join(BASE_DIR, fname)\r\n  if not os.path.exists(fpath):\r\n    with open(fpath, 'wb') as f:\r\n      f.write(requests.get(PD_STATIC_IMAGES_PATH+fname).content)
21	Adding the Score	18	### IMPORTANT: Preamble required on server; omitted here. ####\r\n\r\nimport pyxel\r\n\r\nclass App:\r\n    def __init__(self):\r\n        pyxel.init(160, 120, caption='Mchezo')\r\n\r\n        pyxel.image(0).load(0, 0, 'sprites2.png')\r\n\r\n        self.clouds = [(10, 10), (60, 20), (120, 5)]\r\n        self.player_x = 70\r\n        self.player_y = 50\r\n\r\n        pyxel.run(self.update, self.draw)\r\n\r\n    def update(self):\r\n        if pyxel.btnp(pyxel.KEY_ESCAPE):\r\n            pyxel.quit()\r\n\r\n        self.update_player()\r\n\r\n    def update_player(self):\r\n        if pyxel.btn(pyxel.KEY_W) or pyxel.btn(pyxel.KEY_UP):\r\n            self.player_y -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_A) or pyxel.btn(pyxel.KEY_LEFT):\r\n            self.player_x -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_S) or pyxel.btn(pyxel.KEY_DOWN):\r\n            self.player_y += 2\r\n\r\n        if pyxel.btn(pyxel.KEY_D) or pyxel.btn(pyxel.KEY_RIGHT):\r\n            self.player_x += 2\r\n\r\n    def draw(self):\r\n    \t# clear screen, paint sky blue\r\n        pyxel.cls(12)\r\n\r\n        # draw horizon + mountain + forest\r\n        pyxel.blt(0, 0, 0, 0, 120, 160, 120)\r\n\r\n        # draw clouds\r\n        offset = (pyxel.frame_count / 4) % 160\r\n        for i in range(2):\r\n          for x, y in self.clouds:\r\n            pyxel.blt(x + (i * 160) - offset, y, 0, 0, 32, 56, 8)\r\n\r\n        # draw girl\r\n        pyxel.blt(self.player_x, self.player_y, 0, 0, 0, 16, 16, 12)\r\n\r\n        # SOLN: Adding comment + text\r\n        # draw score\r\n        pyxel.text(4, 4, "SCORE: ?", 7)\r\nApp()	We can't have a game without a score. So let's start to add one now.\r\n<br/><br/>\r\nAt 4 on the X axis and 4 on the Y axis, place some text that says <code>SCORE: ?</code>. The color of the text should be white. <b>Above your new code, you must also add a comment <code># draw score</code> to explain what you have written.	# Note: PD_STATIC_IMAGES_PATH varies based on address\r\n# of server and thus is prepended to this value in views.py\r\nimport os, requests\r\nBASE_DIR = os.path.dirname(os.path.abspath(__file__))\r\nfiles_to_load = ['sprites2.png']\r\nfor fname in files_to_load:\r\n  fpath = os.path.join(BASE_DIR, fname)\r\n  if not os.path.exists(fpath):\r\n    with open(fpath, 'wb') as f:\r\n      f.write(requests.get(PD_STATIC_IMAGES_PATH+fname).content)
19	Allow Button Holding	17	### IMPORTANT: Preamble required on server; omitted here. ####\r\n\r\nimport pyxel\r\n\r\nclass App:\r\n    def __init__(self):\r\n        pyxel.init(160, 120, caption='Mchezo')\r\n\r\n        pyxel.image(0).load(0, 0, 'sprites2.png')\r\n\r\n        self.clouds = [(10, 10), (60, 20), (120, 5)]\r\n        self.player_x = 70\r\n        self.player_y = 50\r\n\r\n        pyxel.run(self.update, self.draw)\r\n\r\n    def update(self):\r\n        if pyxel.btnp(pyxel.KEY_ESCAPE):\r\n            pyxel.quit()\r\n\r\n        self.update_player()\r\n\r\n    def update_player(self):\r\n        # SOLN: Change btnp to btn\r\n        if pyxel.btn(pyxel.KEY_W) or pyxel.btn(pyxel.KEY_UP):\r\n            self.player_y -= 2\r\n\r\n        # SOLN: Change btnp to btn\r\n        if pyxel.btn(pyxel.KEY_A) or pyxel.btn(pyxel.KEY_LEFT):\r\n            self.player_x -= 2\r\n\r\n        # SOLN: Change btnp to btn\r\n        if pyxel.btn(pyxel.KEY_S) or pyxel.btn(pyxel.KEY_DOWN):\r\n            self.player_y += 2\r\n\r\n        # SOLN: Change btnp to btn\r\n        if pyxel.btn(pyxel.KEY_D) or pyxel.btn(pyxel.KEY_RIGHT):\r\n            self.player_x += 2\r\n\r\n    def draw(self):\r\n    \t# clear screen, paint sky blue\r\n        pyxel.cls(12)\r\n\r\n        # draw horizon + mountain + forest\r\n        pyxel.blt(0, 0, 0, 0, 120, 160, 120)\r\n\r\n        # draw clouds\r\n        offset = (pyxel.frame_count / 4) % 160\r\n        for i in range(2):\r\n          for x, y in self.clouds:\r\n            pyxel.blt(x + (i * 160) - offset, y, 0, 0, 32, 56, 8)\r\n\r\n        # draw girl\r\n        pyxel.blt(self.player_x, self.player_y, 0, 0, 0, 16, 16, 12)\r\n\r\nApp()	Currently, if we want the girl to move a lot, we must press the direction keys many times. Notice that if you hold the keys down, she will only move once, but no more.\r\n<br/><br/>\r\nTo allow us to hold down the keys, go read about the <code>btn(key)</code> function by clicking on the "Documentation" button. Then, inside of your <code>update_player(self)</code> function, replace all of your calls to <code>pyxel.btnp(...)</code> with <code>pyxel.btn(...)</code>.	# Note: PD_STATIC_IMAGES_PATH varies based on address\r\n# of server and thus is prepended to this value in views.py\r\nimport os, requests\r\nBASE_DIR = os.path.dirname(os.path.abspath(__file__))\r\nfiles_to_load = ['sprites2.png']\r\nfor fname in files_to_load:\r\n  fpath = os.path.join(BASE_DIR, fname)\r\n  if not os.path.exists(fpath):\r\n    with open(fpath, 'wb') as f:\r\n      f.write(requests.get(PD_STATIC_IMAGES_PATH+fname).content)
23	Using a Variable for the Score	20	### IMPORTANT: Preamble required on server; omitted here. ####\r\n\r\nimport pyxel\r\n\r\nclass App:\r\n    def __init__(self):\r\n        pyxel.init(160, 120, caption='Mchezo')\r\n\r\n        pyxel.image(0).load(0, 0, 'sprites2.png')\r\n\r\n        self.clouds = [(10, 10), (60, 20), (120, 5)]\r\n        self.player_x = 70\r\n        self.player_y = 50\r\n        # SOLN: Added this line\r\n        self.score = 0\r\n\r\n        pyxel.run(self.update, self.draw)\r\n\r\n    def update(self):\r\n        if pyxel.btnp(pyxel.KEY_ESCAPE):\r\n            pyxel.quit()\r\n\r\n        self.update_player()\r\n\r\n    def update_player(self):\r\n        if pyxel.btn(pyxel.KEY_W) or pyxel.btn(pyxel.KEY_UP):\r\n            self.player_y -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_A) or pyxel.btn(pyxel.KEY_LEFT):\r\n            self.player_x -= 2\r\n\r\n        if pyxel.btn(pyxel.KEY_S) or pyxel.btn(pyxel.KEY_DOWN):\r\n            self.player_y += 2\r\n\r\n        if pyxel.btn(pyxel.KEY_D) or pyxel.btn(pyxel.KEY_RIGHT):\r\n            self.player_x += 2\r\n\r\n    def draw(self):\r\n    \t# clear screen, paint sky blue\r\n        pyxel.cls(12)\r\n\r\n        # draw horizon + mountain + forest\r\n        pyxel.blt(0, 0, 0, 0, 120, 160, 120)\r\n\r\n        # draw clouds\r\n        offset = (pyxel.frame_count / 4) % 160\r\n        for i in range(2):\r\n          for x, y in self.clouds:\r\n            pyxel.blt(x + (i * 160) - offset, y, 0, 0, 32, 56, 8)\r\n\r\n        # draw girl\r\n        pyxel.blt(self.player_x, self.player_y, 0, 0, 0, 16, 16, 12)\r\n\r\n        # draw score\r\n        # SOLN: Changed following two lines to reference self.score\r\n        pyxel.text(5, 4, f"SCORE: {self.score}", 1)\r\n        pyxel.text(4, 4, f"SCORE: {self.score}", 7)\r\nApp()	When a game starts, the player should start with 0 points.\r\n<br/><br/>\r\nIn your <code>__init__(self)</code> function, add a new variable to hold the score and set it to <code>0</code>.\r\n<br/><br/>\r\nThen, in your <code>draw(self)</code> function, instead of displaying <code>SCORE: ?</code>, you should display the actual score. You can do this by adding an <code>f</code> to the beginning of a string, then writing the name of the variable you want inside <code>{</code> and <code>}</code>. For example, to display a variable called <code>name</code>:\r\n<br/><br/><center><code>f"Name: {name}"</code></center>\r\n<br/>or to display the number of students at TSSS:\r\n<br/><br/><center><code>f"There are {students} total students at TSSS."</code></center>\r\n<br/>Likewise, do the same for the text that displays your game's score.	# Note: PD_STATIC_IMAGES_PATH varies based on address\r\n# of server and thus is prepended to this value in views.py\r\nimport os, requests\r\nBASE_DIR = os.path.dirname(os.path.abspath(__file__))\r\nfiles_to_load = ['sprites2.png']\r\nfor fname in files_to_load:\r\n  fpath = os.path.join(BASE_DIR, fname)\r\n  if not os.path.exists(fpath):\r\n    with open(fpath, 'wb') as f:\r\n      f.write(requests.get(PD_STATIC_IMAGES_PATH+fname).content)
