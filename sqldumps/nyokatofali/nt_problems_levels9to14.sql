71	Count "Husna"	You have been given a function called <code>countHusna</code> that takes a list called <code>names</code>. \r\n<br/>\r\n<br/>Count the number of times <code>"Husna"</code> appears in <code>names</code>. Return this count at the end.	<block type="def" id="Eqq[fvJW_jmnVA05w`uc" x="89" y="46">\r\n    <field name="funcname">countHusna</field>\r\n    <field name="funcargs">names</field>\r\n    <statement name="funcbody">\r\n    </statement>\r\n  </block>	NTPRINT("\\n=== Testing your program... =============================")\r\ntests_passed = 0\r\ntests = [([], 0),  (["Donald", "Irene", "Husna", "Jackline"], 1), (["Irene", "Husna", "Husna", "Jackline"], 2), (["Donald", "Severiana", "Jackline", "Jackline"], 0), (["Husna", "Husna", "Husna", "Husna"], 4), (["Husna"], 1)]\r\ndef verifier_results():\r\n    if tests_passed == len(tests):\r\n      NTPRINT("ALL TESTS PASSED.")\r\n    NTPRINT('NT_VERIFIER_RESULTS:%d:%d' % (tests_passed, len(tests)))\r\n    import sys\r\n    sys.exit(0)\r\nfor (names, answer) in tests:\r\n    NTPRINT("\\nTEST) Did you answer %d for %s?" % (answer, names))\r\n    response = countHusna(names)\r\n    if response == answer:\r\n        NTPRINT("\\t-> CORRECT")\r\n        tests_passed += 1\r\n    else:\r\n        NTPRINT("\\t-> INCORRECT. You answer '%s'. Try again." % response)\r\nverifier_results()	10
72	Count "Shadrack"	You have been given a function called <code>countShadrack</code> that takes a list called <code>names</code>. \r\n<br/>\r\n<br/>Count the number of times <code>"Shadrack"</code> appears in <code>names</code>. Return this count at the end.	<block type="def" id="Eqq[fvJW_jmnVA05w`uc" x="89" y="46">\r\n    <field name="funcname">countShadrack</field>\r\n    <field name="funcargs">names</field>\r\n    <statement name="funcbody">\r\n    </statement>\r\n  </block>	NTPRINT("\\n=== Testing your program... =============================")\r\ntests_passed = 0\r\ntests = [([], 0),  (["Donald", "Irene", "Shadrack", "Jackline"], 1), (["Irene", "Shadrack", "Shadrack", "Jackline"], 2), (["Donald", "Severiana", "Jackline", "Jackline"], 0), (["Shadrack", "Shadrack", "Shadrack", "Shadrack"], 4), (["Shadrack"], 1)]\r\ndef verifier_results():\r\n    if tests_passed == len(tests):\r\n      NTPRINT("ALL TESTS PASSED.")\r\n    NTPRINT('NT_VERIFIER_RESULTS:%d:%d' % (tests_passed, len(tests)))\r\n    import sys\r\n    sys.exit(0)\r\nfor (names, answer) in tests:\r\n    NTPRINT("\\nTEST) Did you answer %d for %s?" % (answer, names))\r\n    response = countShadrack(names)\r\n    if response == answer:\r\n        NTPRINT("\\t-> CORRECT")\r\n        tests_passed += 1\r\n    else:\r\n        NTPRINT("\\t-> INCORRECT. You answer '%s'. Try again." % response)\r\nverifier_results()	10
73	Find the Name that is 4 Letters Long	You have been given a function called <code>findFourLetterLongName</code> that takes a list called <code>names</code>. \r\n<br/>\r\n<br/>Find the first name in the list that has exactly 4 letters (hint: you can use <code>len(name)</code> to get the number of letters in <code>name</code>). When you find the name, return it. If there is no name that is 4 letters long, return the word <code>"HAKUNA"</code>.	<block type="def" id="Eqq[fvJW_jmnVA05w`uc" x="89" y="46">\r\n    <field name="funcname">findFourLetterLongName</field>\r\n    <field name="funcargs">names</field>\r\n    <statement name="funcbody">\r\n      <block type="for" id="@0xVED%h^ENk}ZlkCxKx">\r\n        <field name="item">name</field>\r\n        <field name="seq">names</field>\r\n      </block>\r\n    </statement>\r\n  </block>	NTPRINT("\\n=== Testing your program... =============================")\r\ntests_passed = 0\r\ntests = [([], "HAKUNA"),  (["Mary", "Irene", "Loveness", "Jackline"], "Mary"), (["Irene", "Irene", "Loveness", "Mary"], "Mary"), (["Donald", "Sara", "Loveness", "Mary"], "Sara"), (["Mary", "Sara", "Mary", "Sara"], "Mary"), (["Sara"], "Sara")]\r\ndef verifier_results():\r\n    if tests_passed == len(tests):\r\n      NTPRINT("ALL TESTS PASSED.")\r\n    NTPRINT('NT_VERIFIER_RESULTS:%d:%d' % (tests_passed, len(tests)))\r\n    import sys\r\n    sys.exit(0)\r\nfor (names, answer) in tests:\r\n    NTPRINT("\\nTEST) Did you answer %s for %s?" % (answer, names))\r\n    response = findFourLetterLongName(names)\r\n    if response == answer:\r\n        NTPRINT("\\t-> CORRECT")\r\n        tests_passed += 1\r\n    else:\r\n        NTPRINT("\\t-> INCORRECT. You answer '%s'. Try again." % response)\r\nverifier_results()	11
74	Find the Name that Is 8 Letters Long	You have been given a function called <code>findEightLetterLongName</code> that takes a list called <code>names</code>. \r\n<br/>\r\n<br/>Find the first name in the list that has exactly 8 letters (hint: you can use <code>len(name)</code> to get the number of letters in <code>name</code>). When you find the name, return it. If there is no name that is 8 letters long, return the word <code>"HAKUNA"</code>.	<block type="def" id="Eqq[fvJW_jmnVA05w`uc" x="89" y="46">\r\n    <field name="funcname">findEightLetterLongName</field>\r\n    <field name="funcargs">names</field>\r\n    <statement name="funcbody">\r\n      <block type="for" id="@0xVED%h^ENk}ZlkCxKx">\r\n        <field name="item">name</field>\r\n        <field name="seq">names</field>\r\n      </block>\r\n    </statement>\r\n  </block>	NTPRINT("\\n=== Testing your program... =============================")\r\ntests_passed = 0\r\ntests = [([], "HAKUNA"),  (["Mary", "Irene", "Loveness", "Jackline"], "Loveness"), (["Irene", "Irene", "Jackline", "Mary"], "Jackline"), (["Donald", "Sara", "Loveness", "Mary"], "Loveness"), (["Jackline", "Sara", "Loveness", "Sara"], "Jackline"), (["Sara"], "HAKUNA")]\r\ndef verifier_results():\r\n    if tests_passed == len(tests):\r\n      NTPRINT("ALL TESTS PASSED.")\r\n    NTPRINT('NT_VERIFIER_RESULTS:%d:%d' % (tests_passed, len(tests)))\r\n    import sys\r\n    sys.exit(0)\r\nfor (names, answer) in tests:\r\n    NTPRINT("\\nTEST) Did you answer %s for %s?" % (answer, names))\r\n    response = findEightLetterLongName(names)\r\n    if response == answer:\r\n        NTPRINT("\\t-> CORRECT")\r\n        tests_passed += 1\r\n    else:\r\n        NTPRINT("\\t-> INCORRECT. You answer '%s'. Try again." % response)\r\nverifier_results()	11
69	Count "Irene"	You have been given a function called <code>countIrene</code> that takes a list called <code>names</code>. \r\n<br/>\r\n<br/>Count the number of times <code>"Irene"</code> appears in <code>names</code>. Return this count at the end.	<block type="def" id="Eqq[fvJW_jmnVA05w`uc" x="89" y="46">\r\n    <field name="funcname">countIrene</field>\r\n    <field name="funcargs">names</field>\r\n    <statement name="funcbody">\r\n      <block type="for" id="@0xVED%h^ENk}ZlkCxKx">\r\n        <field name="item">name</field>\r\n        <field name="seq">names</field>\r\n      </block>\r\n    </statement>\r\n  </block>	NTPRINT("\\n=== Testing your program... =============================")\r\ntests_passed = 0\r\ntests = [([], 0),  (["Donald", "Irene", "Loveness", "Jackline"], 1), (["Irene", "Irene", "Loveness", "Jackline"], 2), (["Donald", "Severiana", "Loveness", "Jackline"], 0), (["Irene", "Irene", "Irene", "Irene"], 4), (["Irene"], 1)]\r\ndef verifier_results():\r\n    if tests_passed == len(tests):\r\n      NTPRINT("ALL TESTS PASSED.")\r\n    NTPRINT('NT_VERIFIER_RESULTS:%d:%d' % (tests_passed, len(tests)))\r\n    import sys\r\n    sys.exit(0)\r\nfor (names, answer) in tests:\r\n    NTPRINT("\\nTEST) Did you answer %d for %s?" % (answer, names))\r\n    response = countIrene(names)\r\n    if response == answer:\r\n        NTPRINT("\\t-> CORRECT")\r\n        tests_passed += 1\r\n    else:\r\n        NTPRINT("\\t-> INCORRECT. You answer '%s'. Try again." % response)\r\nverifier_results()	9
70	Count "Loveness"	You have been given a function called <code>countLoveness</code> that takes a list called <code>names</code>. \r\n<br/>\r\n<br/>Count the number of times <code>"Loveness"</code> appears in <code>names</code>. Return this count at the end.	<block type="def" id="Eqq[fvJW_jmnVA05w`uc" x="89" y="46">\r\n    <field name="funcname">countLoveness</field>\r\n    <field name="funcargs">names</field>\r\n    <statement name="funcbody">\r\n      <block type="for" id="@0xVED%h^ENk}ZlkCxKx">\r\n        <field name="item">name</field>\r\n        <field name="seq">names</field>\r\n      </block>\r\n    </statement>\r\n  </block>	NTPRINT("\\n=== Testing your program... =============================")\r\ntests_passed = 0\r\ntests = [([], 0),  (["Donald", "Irene", "Loveness", "Jackline"], 1), (["Irene", "Loveness", "Loveness", "Jackline"], 2), (["Donald", "Severiana", "Jackline", "Jackline"], 0), (["Loveness", "Loveness", "Loveness", "Loveness"], 4), (["Loveness"], 1)]\r\ndef verifier_results():\r\n    if tests_passed == len(tests):\r\n      NTPRINT("ALL TESTS PASSED.")\r\n    NTPRINT('NT_VERIFIER_RESULTS:%d:%d' % (tests_passed, len(tests)))\r\n    import sys\r\n    sys.exit(0)\r\nfor (names, answer) in tests:\r\n    NTPRINT("\\nTEST) Did you answer %d for %s?" % (answer, names))\r\n    response = countLoveness(names)\r\n    if response == answer:\r\n        NTPRINT("\\t-> CORRECT")\r\n        tests_passed += 1\r\n    else:\r\n        NTPRINT("\\t-> INCORRECT. You answer '%s'. Try again." % response)\r\nverifier_results()	9
75	Find the Name that is 9 Letters Long	You have been given a function called <code>findNineLetterLongName</code> that takes a list called <code>names</code>. \r\n<br/>\r\n<br/>Find the first name in the list that has exactly 9 letters. When you find the name, return it. If there is no name that is 9 letters long, return the word <code>"HAKUNA"</code>.	<block type="def" id="Eqq[fvJW_jmnVA05w`uc" x="89" y="46">\r\n    <field name="funcname">findNineLetterLongName</field>\r\n    <field name="funcargs">names</field>\r\n    </statement>\r\n  </block>	NTPRINT("\\n=== Testing your program... =============================")\r\ntests_passed = 0\r\ntests = [([], "HAKUNA"),  (["Severiana", "Irene", "Loveness", "Jackline"], "Severiana"), (["Irene", "Irene", "Severiana", "Mary"], "Severiana"), (["Donald", "Sara", "Loveness", "Magdalena"], "Magdalena"), (["Magdalena", "Severiana", "Loveness", "Sara"], "Magdalena"), (["Sara"], "HAKUNA")]\r\ndef verifier_results():\r\n    if tests_passed == len(tests):\r\n      NTPRINT("ALL TESTS PASSED.")\r\n    NTPRINT('NT_VERIFIER_RESULTS:%d:%d' % (tests_passed, len(tests)))\r\n    import sys\r\n    sys.exit(0)\r\nfor (names, answer) in tests:\r\n    NTPRINT("\\nTEST) Did you answer %s for %s?" % (answer, names))\r\n    response = findNineLetterLongName(names)\r\n    if response == answer:\r\n        NTPRINT("\\t-> CORRECT")\r\n        tests_passed += 1\r\n    else:\r\n        NTPRINT("\\t-> INCORRECT. You answer '%s'. Try again." % response)\r\nverifier_results()	12
76	Find the Name that is 5 Letters Long	You have been given a function called <code>findFiveLetterLongName</code> that takes a list called <code>names</code>. \r\n<br/>\r\n<br/>Find the first name in the list that has exactly 5 letters. When you find the name, return it. If there is no name that is 5 letters long, return the word <code>"HAKUNA"</code>.	<block type="def" id="Eqq[fvJW_jmnVA05w`uc" x="89" y="46">\r\n    <field name="funcname">findFiveLetterLongName</field>\r\n    <field name="funcargs">names</field>\r\n    </statement>\r\n  </block>	NTPRINT("\\n=== Testing your program... =============================")\r\ntests_passed = 0\r\ntests = [([], "HAKUNA"),  (["Severiana", "Irene", "Loveness", "Jackline"], "Irene"), (["Irene", "Irene", "Severiana", "Mary"], "Irene"), (["Donald", "Sara", "Loveness", "Magdalena"], "HAKUNA"), (["Glory", "Severiana", "Irene", "Sara"], "Glory"), (["Sara"], "HAKUNA")]\r\ndef verifier_results():\r\n    if tests_passed == len(tests):\r\n      NTPRINT("ALL TESTS PASSED.")\r\n    NTPRINT('NT_VERIFIER_RESULTS:%d:%d' % (tests_passed, len(tests)))\r\n    import sys\r\n    sys.exit(0)\r\nfor (names, answer) in tests:\r\n    NTPRINT("\\nTEST) Did you answer %s for %s?" % (answer, names))\r\n    response = findFiveLetterLongName(names)\r\n    if response == answer:\r\n        NTPRINT("\\t-> CORRECT")\r\n        tests_passed += 1\r\n    else:\r\n        NTPRINT("\\t-> INCORRECT. You answer '%s'. Try again." % response)\r\nverifier_results()	12
77	Count Names	You have been given a function called <code>countAllNames</code> that takes a list called <code>names</code>. \r\n<br/>\r\n<br/>Count the number of names in the list. Return this count at the end.	<block type="def" id="Eqq[fvJW_jmnVA05w`uc" x="89" y="46">\r\n    <field name="funcname">countNames</field>\r\n    <field name="funcargs">names</field>\r\n    </statement>\r\n  </block>	NTPRINT("\\n=== Testing your program... =============================")\r\ntests_passed = 0\r\ntests = [[], ["Severiana", "Irene", "Loveness"], ["Irene", "Irene", "Severiana", "Mary"], ["Donald", "Sara", "Loveness", "Magdalena", "Miraji"], ["Glory", "Severiana", "Irene", "Sara"], ["Sara"]]\r\ndef verifier_results():\r\n    if tests_passed == len(tests):\r\n      NTPRINT("ALL TESTS PASSED.")\r\n    NTPRINT('NT_VERIFIER_RESULTS:%d:%d' % (tests_passed, len(tests)))\r\n    import sys\r\n    sys.exit(0)\r\nfor names in tests:\r\n    answer = len(names)\r\n    NTPRINT("\\nTEST) Did you answer %s for %s?" % (answer, names))\r\n    response = countNames(names)\r\n    if response == answer:\r\n        NTPRINT("\\t-> CORRECT")\r\n        tests_passed += 1\r\n    else:\r\n        NTPRINT("\\t-> INCORRECT. You answer '%s'. Try again." % response)\r\nverifier_results()	13
78	Count Letters in Names	You have been given a function called <code>countLetters</code> that takes a list called <code>names</code>. \r\n<br/>\r\n<br/>Count the number of <b>letters</b> in all names in the list. Return this count at the end.	<block type="def" id="Eqq[fvJW_jmnVA05w`uc" x="89" y="46">\r\n    <field name="funcname">countLetters</field>\r\n    <field name="funcargs">names</field>\r\n    </statement>\r\n  </block>	NTPRINT("\\n=== Testing your program... =============================")\r\ntests_passed = 0\r\ntests = [[], ["Severiana", "Irene", "Loveness"], ["Irene", "Irene", "Severiana", "Mary"], ["Donald", "Sara", "Loveness", "Magdalena", "Miraji"], ["Glory", "Severiana", "Irene", "Sara"], ["Sara"]]\r\ndef verifier_results():\r\n    if tests_passed == len(tests):\r\n      NTPRINT("ALL TESTS PASSED.")\r\n    NTPRINT('NT_VERIFIER_RESULTS:%d:%d' % (tests_passed, len(tests)))\r\n    import sys\r\n    sys.exit(0)\r\nfor names in tests:\r\n    answer = 0\r\n    for name in names:\r\n      answer += len(name)\r\n    NTPRINT("\\nTEST) Did you answer %s for %s?" % (answer, names))\r\n    response = countLetters(names)\r\n    if response == answer:\r\n        NTPRINT("\\t-> CORRECT")\r\n        tests_passed += 1\r\n    else:\r\n        NTPRINT("\\t-> INCORRECT. You answer '%s'. Try again." % response)\r\nverifier_results()	14
