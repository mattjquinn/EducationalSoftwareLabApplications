100	Radius of a Circle	Complete the <code>radiusOfACircle</code> function so that it correctly finds the radius of a circle given any point <code>(x, y)</code> on it and its center point <code>(h, k)</code>.\r\n\r\n<center>$$ r = \\sqrt{(x - h)^2 + (y - k)^2} $$</center>	<block type="def" id="Eqq[fvJW_jmnVA05w`uc" x="89" y="46">\r\n    <field name="funcname">radiusOfACircle</field>\r\n    <field name="funcargs">x, y, h, k</field>\r\n    </statement>\r\n  </block>	NTPRINT("\\n=== Testing your program... =============================")\r\ntests_passed = 0\r\ntests = [(1, 5, 1, 10), (5, 43, 3, 4), (5, 8, 2, 2), (-4, -9, -1, 10), (20, 30, -10, 20), (24, 60, 19, 24), (-12, 100, 23, 13), (10, 75, 10, 22), (30, 56, 10, 102), (-12, -34, -12, 23)]\r\ndef verifier_results():\r\n    if tests_passed == len(tests):\r\n      NTPRINT("ALL TESTS PASSED.")\r\n    NTPRINT('NT_VERIFIER_RESULTS:%d:%d' % (tests_passed, len(tests)))\r\n    import sys\r\n    sys.exit(0)\r\nfor x, y, h, k in tests:\r\n    import math\r\n    NT_ANSWER = "%.2f" % math.sqrt((x - h)**2 + (y - k)**2)\r\n    NTPRINT("\\nTEST) Did you answer %s for %d, %d, %d, %d?" % (NT_ANSWER, x, y, h, k))\r\n    response = radiusOfACircle(x, y, h, k)\r\n    if "%.2f" % response == NT_ANSWER:\r\n        NTPRINT("\\t-> CORRECT")\r\n        tests_passed += 1\r\n    else:\r\n        NTPRINT("\\t-> INCORRECT. You answer %s. Try again." % response)\r\nverifier_results()	25
99	Quadratic Formula	Complete the <code>quadraticFormula</code> function so that it correctly solves the quadratic formula given any <code>a</code>, <code>b</code>, and <code>c</code>. Your function should return the pair <code>(x1, x2)</code>.\r\n\r\n<center>$$ x_1 = - \\frac{-b + \\sqrt{b^2 - 4 a c}}{2 a} $$</center>\r\n<br/>\r\n<center>$$ x_2 = - \\frac{-b - \\sqrt{b^2 - 4 a c}}{2 a} $$</center>	<block type="def" id="Eqq[fvJW_jmnVA05w`uc" x="89" y="46">\r\n    <field name="funcname">quadraticFormula</field>\r\n    <field name="funcargs">a, b, c</field>\r\n    </statement>\r\n  </block>	NTPRINT("\\n=== Testing your program... =============================")\r\ntests_passed = 0\r\ntests = [(1, 5, 1), (5, 43, 3), (5, 8, 2), (-4, -9, -1), (20, 30, -10), (24, 60, 19), (-12, 100, 23), (10, 75, 10), (30, 56, 10), (-12, -34, -12)]\r\ndef verifier_results():\r\n    if tests_passed == len(tests):\r\n      NTPRINT("ALL TESTS PASSED.")\r\n    NTPRINT('NT_VERIFIER_RESULTS:%d:%d' % (tests_passed, len(tests)))\r\n    import sys\r\n    sys.exit(0)\r\nfor a, b, c in tests:\r\n    import math\r\n    x1 = "%.2f" % ((-b + math.sqrt(b**2 - 4 * a * c)) / (2 * a))\r\n    x2 = "%.2f" % ((-b - math.sqrt(b**2 - 4 * a * c)) / (2 * a))\r\n    NT_ANSWER = (x1, x2)\r\n    NTPRINT("\\nTEST) Did you answer (%s, %s) for %d, %d, %d?" % (NT_ANSWER[0], NT_ANSWER[1], a, b, c))\r\n    response = quadraticFormula(a, b, c)\r\n    if "%.2f" % response[0] == NT_ANSWER[0] and "%.2f" % response[1] == NT_ANSWER[1]:\r\n        NTPRINT("\\t-> CORRECT")\r\n        tests_passed += 1\r\n    else:\r\n        NTPRINT("\\t-> INCORRECT. You answer (%s, %s). Try again." % (response[0], response[1]))\r\nverifier_results()	26
