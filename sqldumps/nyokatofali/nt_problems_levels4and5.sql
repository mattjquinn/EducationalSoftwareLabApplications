58	Ugali, Wali, Makonde	Hapa TSSS wanafunzi wanakula aina tatu za chakula: ugali, wali, na makonde.\r\n<br/><br/>\r\nYou have been given a function called <i>ipoTSSS</i> that takes a single variable called <i>chakula</i>.\r\n<br/>\r\n<br/>If <i>chakula</i> is equal to "ugali", "wali", or "makonde", return "Ipo". Otherwise, return "Haipo".	<block type="def" id="d%9jK5xNp[_d~j,,s)Jv" x="251" y="113">\r\n    <field name="funcname">ipoTSSS</field>\r\n    <field name="funcargs">chakula</field>\r\n  </block>	NTPRINT("\\n=== Testing your program... =============================")\r\ntest = 1\r\ntests = [("wali", "Ipo"), ("ugali", "Ipo"), ("chipsi", "Haipo"), ("kuku", "Haipo"), ("makonde", "Ipo")]\r\ndef verifier_results():\r\n    NTPRINT('NT_VERIFIER_RESULTS:%d:%d' % (test-1, len(tests)))\r\n    import sys\r\n    sys.exit(0)\r\nfor (chakula, answer) in tests:\r\n    NTPRINT("TEST %d) Do you answer '%s' for %s?" % (test, answer, chakula))\r\n    response = ipoTSSS(chakula)\r\n    if response == answer:\r\n        NTPRINT("\\t-> CORRECT")\r\n        test += 1\r\n    else:\r\n        NTPRINT("\\t-> INCORRECT. You answer '%s'. Try again." % response)\r\n        verifier_results()\r\nNTPRINT("ALL TESTS PASSED.")\r\nverifier_results()	4
59	Rais wa Tanzania	There have been five presidents of Tanzania: Julius Nyerere, Ali Hassan Mwinyi, Benjamin Mkapa, Jakaya Kikwete, John Magufuli.\r\n<br/><br/>\r\nYou have been given a function called <i>amekuwaRais</i> that takes a single variable called <i>name</i>.\r\n<br/>\r\n<br/>If <i>name</i> is "Nyerere", "Mwinyi", "Mkapa", "Kikwete", or "Magufuli", return "Ndio". Otherwise, return "Hapana".	<block type="def" id="d%9jK5xNp[_d~j,,s)Jv" x="251" y="113">\r\n    <field name="funcname">amekuwaRais</field>\r\n    <field name="funcargs">name</field>\r\n  </block>	NTPRINT("\\n=== Testing your program... =============================")\r\ntest = 1\r\ntests = [("Nyerere", "Ndio"), ("Mwinyi", "Ndio"), ("Mkapa", "Ndio"), ("Kikwete", "Ndio"), ("Magufuli", "Ndio"), ('Trump', 'Hapana'), ('Merkel', 'Hapana'), ('Churchill', 'Hapana'), ('Obama', 'Hapana'), ('Modri', 'Hapana'), ('Kim Jong Un', 'Hapana')]\r\ndef verifier_results():\r\n    NTPRINT('NT_VERIFIER_RESULTS:%d:%d' % (test-1, len(tests)))\r\n    import sys\r\n    sys.exit(0)\r\nfor (name, answer) in tests:\r\n    NTPRINT("TEST %d) Do you answer '%s' for %s?" % (test, answer, name))\r\n    response = amekuwaRais(name)\r\n    if response == answer:\r\n        NTPRINT("\\t-> CORRECT")\r\n        test += 1\r\n    else:\r\n        NTPRINT("\\t-> INCORRECT. You answer '%s'. Try again." % response)\r\n        verifier_results()\r\nNTPRINT("ALL TESTS PASSED.")\r\nverifier_results()	4
60	Adding and Multiplying	You have been given a function called <i>addMultiply</i> that takes one variable called <i>operation</i> and two more called <i>num1</i> and <i>num2</i>.\r\n<br/>\r\n<br/>If <i>operation</i> is equal to "ADD", return the sum of num1 and num2.\r\n<br/>If <i>operation</i> is equal to "MULTIPLY", return the product of num1 and num2.\r\n<br/>Otherwise, return the word "UMEKOSEA".	<block type="def" id="d%9jK5xNp[_d~j,,s)Jv" x="251" y="113">\r\n    <field name="funcname">addMultiply</field>\r\n    <field name="funcargs">operation, num1, num2</field>\r\n  </block>	import random\r\nNTPRINT("\\n=== Testing your program... =============================")\r\ntest = 1\r\nopsinput = ['ADD', 'MULTIPLY', 'SUBTRACT', 'DIVIDE']\r\ntests = [(random.randint(1, 1000), random.randint(1, 1000), random.choice(opsinput)) for _ in range(1, 50)]\r\ndef verifier_results():\r\n    NTPRINT('NT_VERIFIER_RESULTS:%d:%d' % (test-1, len(tests)))\r\n    import sys\r\n    sys.exit(0)\r\nfor (n1, n2, op) in tests:\r\n    NTPRINT("TEST %d) Checking your answer to %d %s %d?" % (test, n1, op, n2))\r\n    response = addMultiply(op, n1, n2)\r\n    if op == "ADD":\r\n      answer = n1 + n2\r\n    elif op == 'MULTIPLY':\r\n      answer = n1 * n2\r\n    else:\r\n      answer = "UMEKOSEA"\r\n    if response == answer:\r\n        NTPRINT("\\t-> CORRECT")\r\n        test += 1\r\n    else:\r\n        NTPRINT("\\t-> INCORRECT. You answer '%s'. Try again." % response)\r\n        verifier_results()\r\nNTPRINT("ALL TESTS PASSED.")\r\nverifier_results()	5
61	Subtracting and Dividing	You have been given a function called <i>subtractDivide</i> that takes one variable called <i>operation</i> and two more called <i>num1</i> and <i>num2</i>.\r\n<br/>\r\n<br/>If <i>operation</i> is equal to "SUBTRACT", return the difference of num1 and num2.\r\n<br/>If <i>operation</i> is equal to "DIVIDE", return the quotient of num1 and num2.\r\n<br/>Otherwise, return the word "UMEKOSEA".	<block type="def" id="d%9jK5xNp[_d~j,,s)Jv" x="251" y="113">\r\n    <field name="funcname">subtractDivide</field>\r\n    <field name="funcargs">operation, num1, num2</field>\r\n  </block>	import random\r\nNTPRINT("\\n=== Testing your program... =============================")\r\ntest = 1\r\nopsinput = ['ADD', 'MULTIPLY', 'SUBTRACT', 'DIVIDE']\r\ntests = [(random.randint(1, 1000), random.randint(1, 1000), random.choice(opsinput)) for _ in range(1, 50)]\r\ndef verifier_results():\r\n    NTPRINT('NT_VERIFIER_RESULTS:%d:%d' % (test-1, len(tests)))\r\n    import sys\r\n    sys.exit(0)\r\nfor (n1, n2, op) in tests:\r\n    NTPRINT("TEST %d) Checking your answer to %d %s %d?" % (test, n1, op, n2))\r\n    response = subtractDivide(op, n1, n2)\r\n    if op == "SUBTRACT":\r\n      answer = n1 - n2\r\n    elif op == 'DIVIDE':\r\n      answer = n1 / n2\r\n    else:\r\n      answer = "UMEKOSEA"\r\n    if response == answer:\r\n        NTPRINT("\\t-> CORRECT")\r\n        test += 1\r\n    else:\r\n        NTPRINT("\\t-> INCORRECT. You answer '%s'. Try again." % response)\r\n        verifier_results()\r\nNTPRINT("ALL TESTS PASSED.")\r\nverifier_results()	5
