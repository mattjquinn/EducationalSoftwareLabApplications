52	Sum of Variables form1 to form4	In variable <b>form1</b>, store the number 54.<br/>\r\nIn variable <b>form2</b>, store the number 64.<br/>\r\nIn variable <b>form3</b>, store the number 49.<br/>\r\nIn variable <b>form4</b>, store the number 75.<br/>\r\nFinally, print the sum of all of these variables.	﻿<xml xmlns="http://www.w3.org/1999/xhtml"></xml>	NTPRINT("\\n=== Testing your program... =============================")\r\ntest = 1\r\ntests = [('store 54 in form1', 'form1' in locals() and form1 == 54), ('store 64 in form2', 'form2' in locals() and form2 == 64), ('store 49 in form3', 'form3' in locals() and form3 == 49), ('store 75 in form4', 'form4' in locals() and form4 == 75), ('print the sum of all variables?', PRINTED_LOG.strip() == str(54+64+49+75))]\r\ndef verifier_results():\r\n    NTPRINT('NT_VERIFIER_RESULTS:%d:%d' % (test-1, len(tests)))\r\n    import sys\r\n    sys.exit(0)\r\nfor (task, result) in tests:\r\n    NTPRINT("TEST %d) Did you %s?" % (test, task))\r\n    if result:\r\n        NTPRINT("\\t-> CORRECT")\r\n        test += 1\r\n    else:\r\n        NTPRINT("\\t-> INCORRECT. Try again.")\r\n        verifier_results()\r\nNTPRINT("ALL TESTS PASSED.")\r\nverifier_results()	2	t
50	Difference of Variables j and k	In variable <b>j</b>, store the number 1239204.<br/>\r\nIn variable <b>k</b>, store the number 494949.<br/>\r\nFinally, print the difference of <b>j</b> and <b>k</b> (subtract <b>k</b> from <b>j</b>).	﻿<xml xmlns="http://www.w3.org/1999/xhtml"></xml>	NTPRINT("\\n=== Testing your program... =============================")\r\ntest = 1\r\ntests = [('store 1239204 in j', 'j' in locals() and j == 1239204), ('store 494949 in k', 'k' in locals() and k == 494949), ('print the difference of j and k?', PRINTED_LOG.strip() == str(1239204-494949))]\r\ndef verifier_results():\r\n    NTPRINT('NT_VERIFIER_RESULTS:%d:%d' % (test-1, len(tests)))\r\n    import sys\r\n    sys.exit(0)\r\nfor (task, result) in tests:\r\n    NTPRINT("TEST %d) Did you %s?" % (test, task))\r\n    if result:\r\n        NTPRINT("\\t-> CORRECT")\r\n        test += 1\r\n    else:\r\n        NTPRINT("\\t-> INCORRECT. Try again.")\r\n        verifier_results()\r\nNTPRINT("ALL TESTS PASSED.")\r\nverifier_results()	2	t
51	Dividing Variable q by r	In variable <b>q</b>, store the number 8219394.<br/>\r\nIn variable <b>r</b>, store the number 28384.<br/>\r\nFinally, print the quotient of <b>q</b> and <b>r</b> (divide <b>q</b> by <b>r</b>).	﻿<xml xmlns="http://www.w3.org/1999/xhtml"></xml>	NTPRINT("\\n=== Testing your program... =============================")\r\ntest = 1\r\ntests = [('store 8219394 in q', 'q' in locals() and q == 8219394), ('store 28384 in r', 'r' in locals() and r == 28384), ('print the quotient of q and r?', PRINTED_LOG.strip() == str(8219394 / 28384))]\r\ndef verifier_results():\r\n    NTPRINT('NT_VERIFIER_RESULTS:%d:%d' % (test-1, len(tests)))\r\n    import sys\r\n    sys.exit(0)\r\nfor (task, result) in tests:\r\n    NTPRINT("TEST %d) Did you %s?" % (test, task))\r\n    if result:\r\n        NTPRINT("\\t-> CORRECT")\r\n        test += 1\r\n    else:\r\n        NTPRINT("\\t-> INCORRECT. Try again.")\r\n        verifier_results()\r\nNTPRINT("ALL TESTS PASSED.")\r\nverifier_results()	2	t
46	Print Every Prime from 1 to 20	Print every prime number from 1 to 20. Your program's output should look like this:\r\n\r\n<br/><br/>\r\n\r\n<b style="font-size: 1.3em">\r\n2<br/>\r\n3<br/>\r\n5<br/>\r\n7<br/>\r\n11<br/>\r\n13<br/>\r\n17<br/>\r\n19\r\n</b>	﻿<xml xmlns="http://www.w3.org/1999/xhtml"></xml>	NTPRINT("\\n=== Testing your program... =============================")\r\ntest = 1\r\ntests = ['2', '3', '5', '7', '11', '13', '17', '19']\r\ndef verifier_results():\r\n    NTPRINT('NT_VERIFIER_RESULTS:%d:%d' % (test-1, len(tests)))\r\n    import sys\r\n    sys.exit(0)\r\nfrom itertools import zip_longest\r\nzipped = zip_longest(tests, PRINTED_LOG.strip().split('\\n'), fillvalue='')\r\nfor (answer, stdtprint) in zipped:\r\n    NTPRINT("TEST %d) Did you print '%s'?" % (test, answer))\r\n    if stdtprint == answer:\r\n        NTPRINT("\\t-> CORRECT")\r\n        test += 1\r\n    else:\r\n        NTPRINT("\\t-> INCORRECT. You printed '%s'. Try again." % stdtprint)\r\n        verifier_results()\r\nNTPRINT("ALL TESTS PASSED.")\r\nverifier_results()	1	t
47	Wilaya za Mkoa wa Arusha	Kuna wilaya sita za mkoa wa Arusha. Print kila wilaya kama hivi:\r\n\r\n<br/><br/>\r\n\r\n<b style="font-size: 1.3em">\r\nArumeru<br/>\r\nArusha<br/>\r\nKaratu<br/>\r\nLongido<br/>\r\nMonduli<br/>\r\nNgorongoro\r\n</b>	﻿<xml xmlns="http://www.w3.org/1999/xhtml"></xml>	NTPRINT("\\n=== Testing your program... =============================")\r\ntest = 1\r\ntests = ['Arumeru', 'Arusha', 'Karatu', 'Longido', 'Monduli', 'Ngorongoro']\r\ndef verifier_results():\r\n    NTPRINT('NT_VERIFIER_RESULTS:%d:%d' % (test-1, len(tests)))\r\n    import sys\r\n    sys.exit(0)\r\nfrom itertools import zip_longest\r\nzipped = zip_longest(tests, PRINTED_LOG.strip().split('\\n'), fillvalue='')\r\nfor (answer, stdtprint) in zipped:\r\n    NTPRINT("TEST %d) Did you print '%s'?" % (test, answer))\r\n    if stdtprint == answer:\r\n        NTPRINT("\\t-> CORRECT")\r\n        test += 1\r\n    else:\r\n        NTPRINT("\\t-> INCORRECT. You printed '%s'. Try again." % stdtprint)\r\n        verifier_results()\r\nNTPRINT("ALL TESTS PASSED.")\r\nverifier_results()	1	t
15	Jina La Shule Yako	Print the full name of your school:\r\n<br/><br/>\r\n<center><b>Tumaini Senior Secondary School</b></center>	﻿<xml xmlns="http://www.w3.org/1999/xhtml"></xml>	NTPRINT("\\n=== Testing your program... =============================")\r\ntest = 1\r\ntests = ['Tumaini Senior Secondary School']\r\ndef verifier_results():\r\n    NTPRINT('NT_VERIFIER_RESULTS:%d:%d' % (test-1, len(tests)))\r\n    import sys\r\n    sys.exit(0)\r\nfor answer in tests:\r\n    NTPRINT("TEST %d) Did you print '%s' correctly?" % (test, answer))\r\n    if PRINTED_LOG.strip() == answer:\r\n        NTPRINT("\\t-> CORRECT")\r\n        test += 1\r\n    else:\r\n        NTPRINT("\\t-> INCORRECT. You printed '%s'. Try again." % PRINTED_LOG.strip())\r\n        verifier_results()\r\nNTPRINT("ALL TESTS PASSED.")\r\nverifier_results()	1	t
44	Print Every Even from 1 to 10	Print every even number from 1 to 10. Your program's output should look like this:\r\n\r\n<br/><br/>\r\n\r\n<b style="font-size: 1.3em">\r\n2</br>\r\n4</br>\r\n6</br>\r\n8</br>\r\n10\r\n</b>	﻿<xml xmlns="http://www.w3.org/1999/xhtml"></xml>	NTPRINT("\\n=== Testing your program... =============================")\r\ntest = 1\r\ntests = ['2', '4', '6', '8', '10']\r\ndef verifier_results():\r\n    NTPRINT('NT_VERIFIER_RESULTS:%d:%d' % (test-1, len(tests)))\r\n    import sys\r\n    sys.exit(0)\r\nfrom itertools import zip_longest\r\nzipped = zip_longest(tests, PRINTED_LOG.strip().split('\\n'), fillvalue='')\r\nfor (answer, stdtprint) in zipped:\r\n    NTPRINT("TEST %d) Did you print '%s'?" % (test, answer))\r\n    if stdtprint == answer:\r\n        NTPRINT("\\t-> CORRECT")\r\n        test += 1\r\n    else:\r\n        NTPRINT("\\t-> INCORRECT. You printed '%s'. Try again." % stdtprint)\r\n        verifier_results()\r\nNTPRINT("ALL TESTS PASSED.")\r\nverifier_results()	1	t
49	Product of Variables x, y, and z	In variable <b>x</b>, store the number 12944.<br/>\r\nIn variable <b>y</b>, store the number 59329.<br/>\r\nIn variable <b>z</b>, store the number 85393.<br/>\r\nFinally, print the product of <b>x</b>, <b>y</b>, and <b>z</b> (multiply them together).	﻿<xml xmlns="http://www.w3.org/1999/xhtml"></xml>	NTPRINT("\\n=== Testing your program... =============================")\r\ntest = 1\r\ntests = [('store 12944 x', 'x' in locals() and x == 12944), ('store 59329 in y', 'y' in locals() and y == 59329), ('store 85393 in z', 'z' in locals() and z == 85393), ('print the product of x, y, and z?', PRINTED_LOG.strip() == str(12944*59329*85393))]\r\ndef verifier_results():\r\n    NTPRINT('NT_VERIFIER_RESULTS:%d:%d' % (test-1, len(tests)))\r\n    import sys\r\n    sys.exit(0)\r\nfor (task, result) in tests:\r\n    NTPRINT("TEST %d) Did you %s?" % (test, task))\r\n    if result:\r\n        NTPRINT("\\t-> CORRECT")\r\n        test += 1\r\n    else:\r\n        NTPRINT("\\t-> INCORRECT. Try again.")\r\n        verifier_results()\r\nNTPRINT("ALL TESTS PASSED.")\r\nverifier_results()	2	t
48	Sum of Variables a, b, and c	In variable <b>a</b>, store the number 888.<br/>\r\nIn variable <b>b</b>, store the number 512.<br/>\r\nIn variable <b>c</b>, store the number 453.<br/>\r\nFinally, print the sum of <b>a</b>, <b>b</b>, and <b>c</b>.	﻿<xml xmlns="http://www.w3.org/1999/xhtml"></xml>	NTPRINT("\\n=== Testing your program... =============================")\r\ntest = 1\r\ntests = [('store 888 in a', 'a' in locals() and a == 888), ('store 512 in b', 'b' in locals() and b == 512), ('store 453 in c', 'c' in locals() and c == 453), ('print the sum of a, b, and c?', PRINTED_LOG.strip() == str(888+512+453))]\r\ndef verifier_results():\r\n    NTPRINT('NT_VERIFIER_RESULTS:%d:%d' % (test-1, len(tests)))\r\n    import sys\r\n    sys.exit(0)\r\nfor (task, result) in tests:\r\n    NTPRINT("TEST %d) Did you %s?" % (test, task))\r\n    if result:\r\n        NTPRINT("\\t-> CORRECT")\r\n        test += 1\r\n    else:\r\n        NTPRINT("\\t-> INCORRECT. Try again.")\r\n        verifier_results()\r\nNTPRINT("ALL TESTS PASSED.")\r\nverifier_results()	2	t
45	Print Every Odd from 1 to 10	Print every odd number from 1 to 10. Your program's output should look like this:\r\n\r\n<br/><br/>\r\n\r\n<b style="font-size: 1.3em">\r\n1</br>\r\n3</br>\r\n5</br>\r\n7</br>\r\n9\r\n</b>	﻿<xml xmlns="http://www.w3.org/1999/xhtml"></xml>	NTPRINT("\\n=== Testing your program... =============================")\r\ntest = 1\r\ntests = ['1', '3', '5', '7', '9']\r\ndef verifier_results():\r\n    NTPRINT('NT_VERIFIER_RESULTS:%d:%d' % (test-1, len(tests)))\r\n    import sys\r\n    sys.exit(0)\r\nfrom itertools import zip_longest\r\nzipped = zip_longest(tests, PRINTED_LOG.strip().split('\\n'), fillvalue='')\r\nfor (answer, stdtprint) in zipped:\r\n    NTPRINT("TEST %d) Did you print '%s'?" % (test, answer))\r\n    if stdtprint == answer:\r\n        NTPRINT("\\t-> CORRECT")\r\n        test += 1\r\n    else:\r\n        NTPRINT("\\t-> INCORRECT. You printed '%s'. Try again." % stdtprint)\r\n        verifier_results()\r\nNTPRINT("ALL TESTS PASSED.")\r\nverifier_results()	1	t
